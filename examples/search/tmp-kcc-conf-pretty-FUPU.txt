<global>
    <translation-units>
        <tu>
            <tu-id>
                "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c"
            </tu-id>
            <next-unnamed>
                0
            </next-unnamed>
            <update>
                <version>
                    0
                </version>
                <original-func>
                    SetItem(Identifier ( "isalnum" ))
                    SetItem(Identifier ( "isalpha" ))
                    SetItem(Identifier ( "isblank" ))
                    SetItem(Identifier ( "iscntrl" ))
                    SetItem(Identifier ( "isdigit" ))
                    SetItem(Identifier ( "isgraph" ))
                    SetItem(Identifier ( "islower" ))
                    SetItem(Identifier ( "isprint" ))
                    SetItem(Identifier ( "ispunct" ))
                    SetItem(Identifier ( "isspace" ))
                    SetItem(Identifier ( "isupper" ))
                    SetItem(Identifier ( "isxdigit" ))
                    SetItem(Identifier ( "tolower" ))
                    SetItem(Identifier ( "toupper" ))
                </original-func>
                <wanted>
                    .Set
                </wanted>
                <patch-tu>
                    .Set
                </patch-tu>
                <cap-point>
                    .Set
                </cap-point>
                <wanted-struct>
                    .Set
                </wanted-struct>
                <original-struct>
                    .Set
                </original-struct>
                <update-point-pair>
                    .Set
                </update-point-pair>
                <semantic-points>
                    .Map
                </semantic-points>
                <capability>
                    .Map
                </capability>
                <induced-points>
                    .Map
                </induced-points>
                <struct-restriction>
                    .Map
                </struct-restriction>
            </update>
            <incomplete-tags>
                .Set
            </incomplete-tags>
            <genv>
                Identifier ( "isalnum" ) |-> 0 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "isalpha" ) |-> 1 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "isblank" ) |-> 2 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "iscntrl" ) |-> 3 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "isdigit" ) |-> 4 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "isgraph" ) |-> 5 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "islower" ) |-> 6 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "isprint" ) |-> 0 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "ispunct" ) |-> 8 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "isspace" ) |-> 9 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "isupper" ) |-> 10 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "isxdigit" ) |-> 11 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "tolower" ) |-> 12 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
                Identifier ( "toupper" ) |-> 13 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
            </genv>
            <gtypes>
                Identifier ( "isalnum" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "isalpha" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "isblank" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "iscntrl" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "isdigit" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "isgraph" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "islower" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "isprint" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "ispunct" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "isspace" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "isupper" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "isxdigit" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "tolower" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "toupper" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
            </gtypes>
            <local-types>
                .Map
            </local-types>
            <local-structs>
                .Map
            </local-structs>
            <goto-map>
                Identifier ( "isprint" ) |-> map ( funLabel ( Identifier ( 
                  "isprint" ) ) |-> gotoObject ( 0 , .List , Block ( 1 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( IfThenElse ( 
                  Identifier ( "c" ) <= tv ( 31 , t ( .Set , int ) ) || 
                  Identifier ( "c" ) == tv ( 127 , t ( .Set , int ) ) , 
                  BlockStatement ( Block ( 4 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 5 , list ( .List
                   ) , list ( ListItem(CodeLoc ( Return ( tv ( 0 , t ( .Set , 
                  int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" , 
                  5 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" , 
                  4 , 30 , 0 ) )) ) ) ) , BlockStatement ( Block ( 2 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( BlockStatement ( Block (
                   3 , list ( .List ) , list ( ListItem(CodeLoc ( Return ( tv 
                  ( 1 , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" , 
                  7 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" , 
                  6 , 9 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" , 
                  4 , 2 , 0 ) )) ListItem(CodeLoc ( Return ( tv ( 1 , t ( .Set
                   , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" , 
                  9 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
            </goto-map>
            <gstructs>
                .Map
            </gstructs>
            <local-statics>
                .Map
            </local-statics>
        </tu>
        <tu>
            <tu-id>
                "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c"
            </tu-id>
            <next-unnamed>
                6
            </next-unnamed>
            <update>
                <version>
                    0
                </version>
                <original-func>
                    SetItem(Identifier ( "abs" ))
                    SetItem(Identifier ( "asin" ))
                    SetItem(Identifier ( "atan" ))
                    SetItem(Identifier ( "atan2" ))
                    SetItem(Identifier ( "cos" ))
                    SetItem(Identifier ( "exp" ))
                    SetItem(Identifier ( "fabs" ))
                    SetItem(Identifier ( "floor" ))
                    SetItem(Identifier ( "fmod" ))
                    SetItem(Identifier ( "log" ))
                    SetItem(Identifier ( "pow" ))
                    SetItem(Identifier ( "sin" ))
                    SetItem(Identifier ( "sqrt" ))
                    SetItem(Identifier ( "tan" ))
                </original-func>
                <wanted>
                    .Set
                </wanted>
                <patch-tu>
                    .Set
                </patch-tu>
                <cap-point>
                    .Set
                </cap-point>
                <wanted-struct>
                    .Set
                </wanted-struct>
                <original-struct>
                    .Set
                </original-struct>
                <update-point-pair>
                    .Set
                </update-point-pair>
                <semantic-points>
                    .Map
                </semantic-points>
                <capability>
                    .Map
                </capability>
                <induced-points>
                    .Map
                </induced-points>
                <struct-restriction>
                    .Map
                </struct-restriction>
            </update>
            <incomplete-tags>
                .Set
            </incomplete-tags>
            <genv>
                Identifier ( "abs" ) |-> 0 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "asin" ) |-> 13 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "atan" ) |-> 8 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "atan2" ) |-> 12 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "cos" ) |-> 1 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "exp" ) |-> 12 @ static ( "builtin" )
                Identifier ( "fabs" ) |-> 1 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "floor" ) |-> 9 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "fmod" ) |-> 11 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "log" ) |-> 17 @ static ( "builtin" )
                Identifier ( "pow" ) |-> 2 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "sin" ) |-> 2 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "sqrt" ) |-> 0 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
                Identifier ( "tan" ) |-> 10 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
            </genv>
            <gtypes>
                Identifier ( "abs" ) |-> t ( .Set , functionType ( t ( .Set , 
                  int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "asin" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "atan" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "atan2" ) |-> t ( .Set , functionType ( t ( .Set 
                  , double ) , ListItem(t ( .Set , double )) ListItem(t ( .Set
                   , double )) ) )
                Identifier ( "cos" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "exp" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "fabs" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "floor" ) |-> t ( .Set , functionType ( t ( .Set 
                  , double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "fmod" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ListItem(t ( .Set 
                  , double )) ) )
                Identifier ( "log" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "pow" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ListItem(t ( .Set ,
                   double )) ) )
                Identifier ( "sin" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "sqrt" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "tan" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
            </gtypes>
            <local-types>
                .Map
            </local-types>
            <local-structs>
                .Map
            </local-structs>
            <goto-map>
                Identifier ( "abs" ) |-> map ( funLabel ( Identifier ( "abs" )
                   ) |-> gotoObject ( 0 , .List , Block ( 1 , list ( .List ) ,
                   list ( ListItem(CodeLoc ( IfThenElse ( Identifier ( "num" )
                   >= tv ( 0 , t ( .Set , int ) ) , BlockStatement ( Block ( 4
                   , list ( .List ) , list ( ListItem(CodeLoc ( BlockStatement
                   ( Block ( 5 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  Return ( Identifier ( "num" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 5
                   , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 4
                   , 16 , 0 ) )) ) ) ) , BlockStatement ( Block ( 2 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( BlockStatement ( Block (
                   3 , list ( .List ) , list ( ListItem(CodeLoc ( Return ( - 
                  Identifier ( "num" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 7
                   , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 6
                   , 9 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 4
                   , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "fabs" ) |-> map ( funLabel ( Identifier ( "fabs"
                   ) ) |-> gotoObject ( 0 , .List , Block ( 6 , list ( .List )
                   , list ( ListItem(CodeLoc ( IfThenElse ( Identifier ( "num"
                   ) >= tv ( 0.0 , t ( .Set , double ) ) , BlockStatement ( 
                  Block ( 9 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 10 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Return ( Identifier ( "num" ) ) , CabsLoc
                   ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" 
                  , 12 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  11 , 18 , 0 ) )) ) ) ) , BlockStatement ( Block ( 7 , list (
                   .List ) , list ( ListItem(CodeLoc ( BlockStatement ( Block 
                  ( 8 , list ( .List ) , list ( ListItem(CodeLoc ( Return ( - 
                  Identifier ( "num" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  14 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  13 , 9 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  11 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "pow" ) |-> map ( funLabel ( Identifier ( "pow" )
                   ) |-> gotoObject ( 0 , .List , Block ( 11 , list ( .List ) 
                  , list ( ListItem(CodeLoc ( IfThenElse ( Identifier ( "x" ) 
                  == tv ( 0 , t ( .Set , int ) ) && Identifier ( "y" ) == tv (
                   0 , t ( .Set , int ) ) , BlockStatement ( Block ( 13 , list
                   ( .List ) , list ( ListItem(CodeLoc ( BlockStatement ( 
                  Block ( 14 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  Return ( tv ( 1 , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  19 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  18 , 24 , 0 ) )) ) ) ) , BlockStatement ( Block ( 12 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  18 , 2 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  18 , 2 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier (
                   "x" ) == tv ( 0 , t ( .Set , int ) ) && Identifier ( "y" ) 
                  != tv ( 0 , t ( .Set , int ) ) , BlockStatement ( Block ( 16
                   , list ( .List ) , list ( ListItem(CodeLoc ( BlockStatement
                   ( Block ( 17 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  Return ( tv ( 0 , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  22 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  21 , 24 , 0 ) )) ) ) ) , BlockStatement ( Block ( 15 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  21 , 2 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  21 , 2 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier (
                   "y" ) == tv ( 0 , t ( .Set , int ) ) && Identifier ( "x" ) 
                  != tv ( 0 , t ( .Set , int ) ) , BlockStatement ( Block ( 19
                   , list ( .List ) , list ( ListItem(CodeLoc ( BlockStatement
                   ( Block ( 20 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  Return ( tv ( 1 , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  25 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  24 , 24 , 0 ) )) ) ) ) , BlockStatement ( Block ( 18 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  24 , 2 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  24 , 2 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier (
                   "x" ) < tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 22 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 23 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( IfThenElse ( Identifier ( "y" ) / tv ( 
                  1.0 , t ( .Set , double ) ) == Cast ( Specifier ( list ( 
                  ListItem(Int) ) ) , JustBase , Identifier ( "y" ) ) , 
                  BlockStatement ( Block ( 25 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 26 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( IfThenElse ( Cast ( 
                  Specifier ( list ( ListItem(Int) ) ) , JustBase , Identifier
                   ( "y" ) ) % tv ( 2 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 29 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 30 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Return ( - Call ( Identifier ( "exp" ) , 
                  list ( ListItem(Identifier ( "y" ) * Call ( Identifier ( 
                  "log" ) , list ( ListItem(- Identifier ( "x" )) ) )) ) ) ) ,
                   CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  30 , 5 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  29 , 20 , 0 ) )) ) ) ) , BlockStatement ( Block ( 27 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( BlockStatement ( Block
                   ( 28 , list ( .List ) , list ( ListItem(CodeLoc ( Return ( 
                  Call ( Identifier ( "exp" ) , list ( ListItem(Identifier ( 
                  "y" ) * Call ( Identifier ( "log" ) , list ( ListItem(- 
                  Identifier ( "x" )) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  32 , 5 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  31 , 11 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  29 , 4 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  28 , 25 , 0 ) )) ) ) ) , BlockStatement ( Block ( 24 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  28 , 3 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  28 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  27 , 13 , 0 ) )) ) ) ) , BlockStatement ( Block ( 21 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  27 , 2 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  27 , 2 , 0 ) )) ListItem(CodeLoc ( Return ( Call ( 
                  Identifier ( "exp" ) , list ( ListItem(Identifier ( "y" ) * 
                  Call ( Identifier ( "log" ) , list ( ListItem(Identifier ( 
                  "x" )) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" , 
                  36 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
            </goto-map>
            <gstructs>
                .Map
            </gstructs>
            <local-statics>
                .Map
            </local-statics>
        </tu>
        <tu>
            <tu-id>
                "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
            </tu-id>
            <next-unnamed>
                12
            </next-unnamed>
            <update>
                <version>
                    0
                </version>
                <original-func>
                    SetItem(Identifier ( "__debug" ))
                    SetItem(Identifier ( "__fslCloseFile" ))
                    SetItem(Identifier ( "__fslFGetC" ))
                    SetItem(Identifier ( "__fslOpenFile" ))
                    SetItem(Identifier ( "__fslPutc" ))
                    SetItem(Identifier ( "abort" ))
                    SetItem(Identifier ( "atoi" ))
                    SetItem(Identifier ( "calloc" ))
                    SetItem(Identifier ( "exit" ))
                    SetItem(Identifier ( "fclose" ))
                    SetItem(Identifier ( "feof" ))
                    SetItem(Identifier ( "fgetc" ))
                    SetItem(Identifier ( "fgets" ))
                    SetItem(Identifier ( "fopen" ))
                    SetItem(Identifier ( "fprintf" ))
                    SetItem(Identifier ( "free" ))
                    SetItem(Identifier ( "getc" ))
                    SetItem(Identifier ( "getchar" ))
                    SetItem(Identifier ( "malloc" ))
                    SetItem(Identifier ( "printf" ))
                    SetItem(Identifier ( "putc" ))
                    SetItem(Identifier ( "putchar" ))
                    SetItem(Identifier ( "puts" ))
                    SetItem(Identifier ( "rand" ))
                    SetItem(Identifier ( "realloc" ))
                    SetItem(Identifier ( "snprintf" ))
                    SetItem(Identifier ( "sprintf" ))
                    SetItem(Identifier ( "srand" ))
                </original-func>
                <wanted>
                    .Set
                </wanted>
                <patch-tu>
                    .Set
                </patch-tu>
                <cap-point>
                    .Set
                </cap-point>
                <wanted-struct>
                    .Set
                </wanted-struct>
                <original-struct>
                    SetItem(Identifier ( "div_t_" ))
                    SetItem(Identifier ( "ldiv_t_" ))
                </original-struct>
                <update-point-pair>
                    .Set
                </update-point-pair>
                <semantic-points>
                    .Map
                </semantic-points>
                <capability>
                    .Map
                </capability>
                <induced-points>
                    .Map
                </induced-points>
                <struct-restriction>
                    Identifier ( "fclose_D" ) |-> set ( SetItem(Identifier ( 
                      "FILE_" )) )
                    Identifier ( "feof_D" ) |-> set ( SetItem(Identifier ( 
                      "FILE_" )) )
                    Identifier ( "fgetc_D" ) |-> set ( SetItem(Identifier ( 
                      "FILE_" )) )
                    Identifier ( "fopen_D" ) |-> set ( SetItem(Identifier ( 
                      "FILE_" )) )
                    Identifier ( "putc_D" ) |-> set ( SetItem(Identifier ( 
                      "FILE_" )) )
                </struct-restriction>
            </update>
            <incomplete-tags>
                .Set
            </incomplete-tags>
            <genv>
                Identifier ( "__debug" ) |-> 24 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "__fslCloseFile" ) |-> 1 @ static ( "builtin" )
                Identifier ( "__fslFGetC" ) |-> 2 @ static ( "builtin" )
                Identifier ( "__fslOpenFile" ) |-> 3 @ static ( "builtin" )
                Identifier ( "__fslPutc" ) |-> 4 @ static ( "builtin" )
                Identifier ( "__fsl_next_fd" ) |-> 3 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "abort" ) |-> 27 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "atoi" ) |-> 28 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "calloc" ) |-> 22 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "exit" ) |-> 23 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "fclose" ) |-> 12 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "feof" ) |-> 13 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "fgetc" ) |-> 14 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "fgets" ) |-> 15 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "fopen" ) |-> 11 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "fprintf" ) |-> 0 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "free" ) |-> 15 @ static ( "builtin" )
                Identifier ( "getc" ) |-> 1 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "getchar" ) |-> 7 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "malloc" ) |-> 18 @ static ( "builtin" )
                Identifier ( "printf" ) |-> 19 @ static ( "builtin" )
                Identifier ( "putc" ) |-> 4 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "putchar" ) |-> 6 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "puts" ) |-> 2 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "rand" ) |-> 26 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "realloc" ) |-> 20 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "snprintf" ) |-> 11 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "sprintf" ) |-> 10 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "srand" ) |-> 25 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "stderr" ) |-> 10 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "stderr_file" ) |-> 7 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "stdin" ) |-> 8 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "stdin_file" ) |-> 5 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "stdout" ) |-> 9 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
                Identifier ( "stdout_file" ) |-> 6 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
            </genv>
            <gtypes>
                Identifier ( "__debug" ) |-> t ( .Set , functionType ( t ( 
                  .Set , void ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "__fslCloseFile" ) |-> t ( .Set , functionType ( 
                  t ( .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "__fslFGetC" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ListItem(t ( .Set 
                  , unsigned-long-long-int )) ) )
                Identifier ( "__fslOpenFile" ) |-> t ( .Set , functionType ( t
                   ( .Set , int ) , ListItem(t ( .Set , pointerType ( t ( 
                  SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , 
                  pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "__fslPutc" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , signed-char )) ListItem(t
                   ( .Set , int )) ) )
                Identifier ( "__fsl_next_fd" ) |-> t ( .Set , int )
                Identifier ( "abort" ) |-> t ( .Set , functionType ( t ( .Set 
                  , void ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "atoi" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
                  ) , signed-char ) ) )) ) )
                Identifier ( "calloc" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   unsigned-int )) ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "exit" ) |-> t ( .Set , functionType ( t ( .Set ,
                   void ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "fclose" ) |-> t ( .Set , functionType ( t ( .Set
                   , int ) , ListItem(t ( .Set , pointerType ( t ( .Set , 
                  structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
                  ListItem(typedDeclaration ( t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )) ) )
                Identifier ( "feof" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , pointerType ( t ( .Set , 
                  structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
                  ListItem(typedDeclaration ( t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )) ) )
                Identifier ( "fgetc" ) |-> t ( .Set , functionType ( t ( .Set 
                  , int ) , ListItem(t ( .Set , pointerType ( t ( .Set , 
                  structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
                  ListItem(typedDeclaration ( t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )) ) )
                Identifier ( "fgets" ) |-> t ( .Set , functionType ( t ( .Set 
                  , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( 
                  SetItem(Restrict) , pointerType ( t ( .Set , signed-char ) )
                   )) ListItem(t ( .Set , int )) ListItem(t ( SetItem(Restrict
                  ) , pointerType ( t ( .Set , structType ( Identifier ( 
                  "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t (
                   .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )
                  ) ListItem(typedDeclaration ( t ( .Set , unsigned-short-int 
                  ) , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t
                   ( .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )) ) )
                Identifier ( "fopen" ) |-> t ( .Set , functionType ( t ( .Set 
                  , pointerType ( t ( .Set , structType ( Identifier ( "FILE_"
                   ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set ,
                   unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) ) , ListItem(t ( .Set , pointerType ( t ( SetItem(
                  Const) , signed-char ) ) )) ListItem(t ( .Set , pointerType 
                  ( t ( SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "fprintf" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , pointerType ( t ( .Set , 
                  structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
                  ListItem(typedDeclaration ( t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(
                  Const) , signed-char ) ) )) ListItem(variadic) ) )
                Identifier ( "free" ) |-> t ( .Set , functionType ( t ( .Set ,
                   void ) , ListItem(t ( .Set , pointerType ( t ( .Set , void 
                  ) ) )) ) )
                Identifier ( "getc" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , pointerType ( t ( .Set , 
                  structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
                  ListItem(typedDeclaration ( t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )) ) )
                Identifier ( "getchar" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "malloc" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   unsigned-int )) ) )
                Identifier ( "printf" ) |-> t ( .Set , functionType ( t ( .Set
                   , int ) , ListItem(t ( SetItem(Restrict) , pointerType ( t 
                  ( SetItem(Const) , signed-char ) ) )) ListItem(variadic) ) )
                Identifier ( "putc" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , signed-char )) ListItem(t ( 
                  .Set , pointerType ( t ( .Set , structType ( Identifier ( 
                  "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t (
                   .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )
                  ) ListItem(typedDeclaration ( t ( .Set , unsigned-short-int 
                  ) , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t
                   ( .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )) ) )
                Identifier ( "putchar" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "puts" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
                  ) , signed-char ) ) )) ) )
                Identifier ( "rand" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "realloc" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( 
                  .Set , pointerType ( t ( .Set , void ) ) )) ListItem(t ( 
                  .Set , unsigned-int )) ) )
                Identifier ( "snprintf" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( SetItem(Restrict) , pointerType 
                  ( t ( .Set , signed-char ) ) )) ListItem(t ( .Set , 
                  unsigned-int )) ListItem(t ( SetItem(Restrict) , pointerType
                   ( t ( SetItem(Const) , signed-char ) ) )) ListItem(variadic
                  ) ) )
                Identifier ( "sprintf" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( SetItem(Restrict) , pointerType 
                  ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(
                  Restrict) , pointerType ( t ( SetItem(Const) , signed-char )
                   ) )) ListItem(variadic) ) )
                Identifier ( "srand" ) |-> t ( .Set , functionType ( t ( .Set 
                  , void ) , ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "stderr" ) |-> t ( .Set , pointerType ( t ( .Set 
                  , structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
                  ListItem(typedDeclaration ( t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )
                Identifier ( "stderr_file" ) |-> t ( .Set , structType ( 
                  Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
                  Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( 
                  .Set , unsigned-short-int ) , Identifier ( "handle" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-char ) , 
                  Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set 
                  , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
                  unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) )
                Identifier ( "stdin" ) |-> t ( .Set , pointerType ( t ( .Set ,
                   structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
                  ListItem(typedDeclaration ( t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )
                Identifier ( "stdin_file" ) |-> t ( .Set , structType ( 
                  Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
                  Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( 
                  .Set , unsigned-short-int ) , Identifier ( "handle" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-char ) , 
                  Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set 
                  , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
                  unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) )
                Identifier ( "stdout" ) |-> t ( .Set , pointerType ( t ( .Set 
                  , structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
                  ListItem(typedDeclaration ( t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "offset" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) 
                  , Identifier ( "handle" ) )) ListItem(typedDeclaration ( t (
                   .Set , unsigned-char ) , Identifier ( "eof" ) )) , 
                  Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) 
                  Identifier ( "handle" ) |-> t ( .Set , unsigned-short-int ) 
                  Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) ) ) )
                Identifier ( "stdout_file" ) |-> t ( .Set , structType ( 
                  Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
                  Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( 
                  .Set , unsigned-short-int ) , Identifier ( "handle" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-char ) , 
                  Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set 
                  , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
                  unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) )
                typedef ( Identifier ( "FILE" ) ) |-> t ( .Set , structType ( 
                  Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
                  Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( 
                  .Set , unsigned-short-int ) , Identifier ( "handle" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-char ) , 
                  Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set 
                  , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
                  unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  ) ) )
                typedef ( Identifier ( "div_t" ) ) |-> t ( .Set , structType (
                   Identifier ( "div_t__old" ) , 64 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , int ) , Identifier ( "quot" ) 
                  )) ListItem(typedDeclaration ( t ( .Set , int ) , Identifier
                   ( "rem" ) )) , Identifier ( "quot" ) |-> t ( .Set , int ) 
                  Identifier ( "rem" ) |-> t ( .Set , int ) , Identifier ( 
                  "quot" ) |-> 0 Identifier ( "rem" ) |-> 4 ) ) )
                typedef ( Identifier ( "ldiv_t" ) ) |-> t ( .Set , structType 
                  ( Identifier ( "ldiv_t__old" ) , 64 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , long-int ) , Identifier ( 
                  "quot" ) )) ListItem(typedDeclaration ( t ( .Set , long-int 
                  ) , Identifier ( "rem" ) )) , Identifier ( "quot" ) |-> t ( 
                  .Set , long-int ) Identifier ( "rem" ) |-> t ( .Set , 
                  long-int ) , Identifier ( "quot" ) |-> 0 Identifier ( "rem" 
                  ) |-> 4 ) ) )
                typedef ( Identifier ( "max_align_t" ) ) |-> t ( .Set , 
                  signed-char )
                typedef ( Identifier ( "ptrdiff_t" ) ) |-> t ( .Set , int )
                typedef ( Identifier ( "size_t" ) ) |-> t ( .Set , 
                  unsigned-int )
                typedef ( Identifier ( "wchar_t" ) ) |-> t ( .Set , int )
            </gtypes>
            <local-types>
                kpair ( Identifier ( "i" ) , 16 ) |-> .K
                kpair ( Identifier ( "newFile" ) , 5 ) |-> .K
                kpair ( Identifier ( "nextHandle" ) , 5 ) |-> .K
                kpair ( Identifier ( "oneChar" ) , 22 ) |-> .K
                kpair ( Identifier ( "retval" ) , 7 ) |-> .K
                kpair ( Identifier ( "retval" ) , 12 ) |-> .K
            </local-types>
            <local-structs>
                .Map
            </local-structs>
            <goto-map>
                Identifier ( "fclose" ) |-> map ( funLabel ( Identifier ( 
                  "fclose" ) ) |-> gotoObject ( 0 , .List , Block ( 7 , list (
                   .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition (
                   InitNameGroup ( Specifier ( list ( ListItem(Int) ) ) , list
                   ( ListItem(InitName ( Name ( Identifier ( "retval" ) , 
                  JustBase ) , SingleInit ( Call ( Identifier ( 
                  "__fslCloseFile" ) , list ( ListItem(* Identifier ( "stream"
                   ) . Identifier ( "handle" )) ) ) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  50 , 2 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier (
                   "retval" ) , BlockStatement ( Block ( 9 , list ( .List ) , 
                  list ( ListItem(CodeLoc ( BlockStatement ( Block ( 10 , list
                   ( .List ) , list ( ListItem(CodeLoc ( Return ( - tv ( 1 , t
                   ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  52 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  51 , 14 , 0 ) )) ) ) ) , BlockStatement ( Block ( 8 , list (
                   .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  51 , 2 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  51 , 2 , 0 ) )) ListItem(CodeLoc ( Computation ( Call ( 
                  Identifier ( "free" ) , list ( ListItem(Identifier ( 
                  "stream" )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  54 , 2 , 0 ) )) ListItem(CodeLoc ( Return ( tv ( 0 , t ( 
                  .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  56 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "feof" ) |-> map ( funLabel ( Identifier ( "feof"
                   ) ) |-> gotoObject ( 0 , .List , Block ( 11 , list ( .List 
                  ) , list ( ListItem(CodeLoc ( Return ( * Identifier ( 
                  "stream" ) . Identifier ( "eof" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  60 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "fgetc" ) |-> map ( funLabel ( Identifier ( 
                  "fgetc" ) ) |-> gotoObject ( 0 , .List , Block ( 12 , list (
                   .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition (
                   InitNameGroup ( Specifier ( list ( ListItem(Int) ) ) , list
                   ( ListItem(InitName ( Name ( Identifier ( "retval" ) , 
                  JustBase ) , SingleInit ( Call ( Identifier ( "__fslFGetC" )
                   , list ( ListItem(* Identifier ( "stream" ) . Identifier ( 
                  "handle" )) ListItem(tv ( 0 , t ( .Set , int ) )) ) ) ) )) )
                   ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  64 , 2 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier (
                   "retval" ) < tv ( 0 , t ( .Set , int ) ) , BlockStatement (
                   Block ( 14 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 15 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Computation ( * Identifier ( "stream" ) .
                   Identifier ( "eof" ) := tv ( 1 , t ( .Set , int ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  68 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  65 , 18 , 0 ) )) ) ) ) , BlockStatement ( Block ( 13 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  65 , 2 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  65 , 2 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "retval" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  71 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "fgets" ) |-> map ( funLabel ( Identifier ( 
                  "fgets" ) ) |-> gotoObject ( 0 , .List , Block ( 16 , list (
                   .List ) , list ( ListItem(CodeLoc ( IfThenElse ( Identifier
                   ( "size" ) < tv ( 2 , t ( .Set , int ) ) , BlockStatement (
                   Block ( 18 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 19 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Return ( Cast ( Specifier ( list ( 
                  ListItem(Void) ) ) , PointerType ( Specifier ( list ( .List 
                  ) ) , JustBase ) , tv ( 0 , t ( .Set , int ) ) ) ) , CabsLoc
                   ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
                   , 75 , 17 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  75 , 15 , 0 ) )) ) ) ) , BlockStatement ( Block ( 17 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  75 , 2 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  75 , 2 , 0 ) )) ListItem(CodeLoc ( DeclarationDefinition ( 
                  InitNameGroup ( Specifier ( list ( ListItem(Int) ) ) , list 
                  ( ListItem(InitName ( Name ( Identifier ( "i" ) , JustBase )
                   , SingleInit ( tv ( 0 , t ( .Set , int ) ) ) )) ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  76 , 2 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( "i" 
                  ) < Identifier ( "size" ) - tv ( 1 , t ( .Set , int ) ) , 
                  BlockStatement ( Block ( 21 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 22 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition ( 
                  InitNameGroup ( Specifier ( list ( ListItem(Int) ) ) , list 
                  ( ListItem(InitName ( Name ( Identifier ( "oneChar" ) , 
                  JustBase ) , SingleInit ( Call ( Identifier ( "fgetc" ) , 
                  list ( ListItem(Identifier ( "stream" )) ) ) ) )) ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  78 , 3 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier (
                   "oneChar" ) == - tv ( 1 , t ( .Set , int ) ) , 
                  BlockStatement ( Block ( 24 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 25 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( IfThenElse ( Identifier 
                  ( "i" ) == tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 28 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 29 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Return ( Cast ( Specifier ( list ( 
                  ListItem(Void) ) ) , PointerType ( Specifier ( list ( .List 
                  ) ) , JustBase ) , tv ( 0 , t ( .Set , int ) ) ) ) , CabsLoc
                   ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
                   , 81 , 5 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  80 , 16 , 0 ) )) ) ) ) , BlockStatement ( Block ( 26 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( BlockStatement ( Block
                   ( 27 , list ( .List ) , list ( ListItem(CodeLoc ( Break , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  83 , 5 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  82 , 11 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  80 , 4 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  79 , 22 , 0 ) )) ) ) ) , BlockStatement ( Block ( 23 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  79 , 3 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  79 , 3 , 0 ) )) ListItem(CodeLoc ( Computation ( * 
                  Identifier ( "str" ) + Identifier ( "i" ) := Identifier ( 
                  "oneChar" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  86 , 3 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier (
                   "oneChar" ) == tv ( 10 , t ( .Set , int ) ) , 
                  BlockStatement ( Block ( 32 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 33 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( Break , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  88 , 4 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  87 , 24 , 0 ) )) ) ) ) , BlockStatement ( Block ( 31 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  87 , 3 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  87 , 3 , 0 ) )) ListItem(CodeLoc ( Computation ( Identifier 
                  ( "i" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  91 , 3 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  77 , 22 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  77 , 2 , 0 ) )) ListItem(CodeLoc ( Computation ( * 
                  Identifier ( "str" ) + Identifier ( "i" ) + tv ( 1 , t ( 
                  .Set , int ) ) := tv ( 0 , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  93 , 2 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "str" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  94 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "fopen" ) |-> map ( funLabel ( Identifier ( 
                  "fopen" ) ) |-> gotoObject ( 0 , .List , Block ( 5 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition ( 
                  InitNameGroup ( Specifier ( list ( ListItem(Int) ) ) , list 
                  ( ListItem(InitName ( Name ( Identifier ( "nextHandle" ) , 
                  JustBase ) , SingleInit ( Call ( Identifier ( 
                  "__fslOpenFile" ) , list ( ListItem(Identifier ( "filename" 
                  )) ListItem(Identifier ( "mode" )) ) ) ) )) ) ) ) , CabsLoc 
                  ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
                  , 37 , 2 , 0 ) )) ListItem(CodeLoc ( DeclarationDefinition (
                   InitNameGroup ( Specifier ( list ( ListItem(Named ( 
                  Identifier ( "FILE" ) )) ) ) , list ( ListItem(InitName ( 
                  Name ( Identifier ( "newFile" ) , PointerType ( Specifier ( 
                  list ( .List ) ) , JustBase ) ) , SingleInit ( Cast ( 
                  Specifier ( list ( ListItem(Named ( Identifier ( "FILE" ) ))
                   ) ) , PointerType ( Specifier ( list ( .List ) ) , JustBase
                   ) , Call ( Identifier ( "malloc" ) , list ( ListItem(
                  SizeofType ( Specifier ( list ( ListItem(Named ( Identifier 
                  ( "FILE" ) )) ) ) , JustBase )) ) ) ) ) )) ) ) ) , CabsLoc (
                   "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ,
                   42 , 2 , 0 ) )) ListItem(CodeLoc ( Computation ( * 
                  Identifier ( "newFile" ) . Identifier ( "offset" ) := tv ( 0
                   , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  43 , 2 , 0 ) )) ListItem(CodeLoc ( Computation ( * 
                  Identifier ( "newFile" ) . Identifier ( "handle" ) := 
                  Identifier ( "nextHandle" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  44 , 2 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "newFile" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  46 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "fprintf" ) |-> map ( funLabel ( Identifier ( 
                  "fprintf" ) ) |-> gotoObject ( 0 , .List , Block ( 1 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( Return ( tv ( 0 , t ( 
                  .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  6 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "getc" ) |-> map ( funLabel ( Identifier ( "getc"
                   ) ) |-> gotoObject ( 0 , .List , Block ( 2 , list ( .List )
                   , list ( ListItem(CodeLoc ( Return ( Call ( Identifier ( 
                  "fgetc" ) , list ( ListItem(Identifier ( "stream" )) ) ) ) ,
                   CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  10 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "putc" ) |-> map ( funLabel ( Identifier ( "putc"
                   ) ) |-> gotoObject ( 0 , .List , Block ( 4 , list ( .List )
                   , list ( ListItem(CodeLoc ( Return ( Call ( Identifier ( 
                  "__fslPutc" ) , list ( ListItem(Identifier ( "c" )) 
                  ListItem(* Identifier ( "stream" ) . Identifier ( "handle" )
                  ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  24 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "puts" ) |-> map ( funLabel ( Identifier ( "puts"
                   ) ) |-> gotoObject ( 0 , .List , Block ( 3 , list ( .List )
                   , list ( ListItem(CodeLoc ( Return ( Call ( Identifier ( 
                  "printf" ) , list ( ListItem(stringLiteral ( "%s\n" )) 
                  ListItem(Identifier ( "str" )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" , 
                  14 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
            </goto-map>
            <gstructs>
                Identifier ( "FILE_" ) |-> fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
                  Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( 
                  .Set , unsigned-short-int ) , Identifier ( "handle" ) )) 
                  ListItem(typedDeclaration ( t ( .Set , unsigned-char ) , 
                  Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set 
                  , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
                  unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
                  unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 
                  Identifier ( "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 
                  )
                Identifier ( "div_t__old" ) |-> fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , int ) , Identifier ( "quot" ) 
                  )) ListItem(typedDeclaration ( t ( .Set , int ) , Identifier
                   ( "rem" ) )) , Identifier ( "quot" ) |-> t ( .Set , int ) 
                  Identifier ( "rem" ) |-> t ( .Set , int ) , Identifier ( 
                  "quot" ) |-> 0 Identifier ( "rem" ) |-> 4 )
                Identifier ( "ldiv_t__old" ) |-> fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , long-int ) , Identifier ( 
                  "quot" ) )) ListItem(typedDeclaration ( t ( .Set , long-int 
                  ) , Identifier ( "rem" ) )) , Identifier ( "quot" ) |-> t ( 
                  .Set , long-int ) Identifier ( "rem" ) |-> t ( .Set , 
                  long-int ) , Identifier ( "quot" ) |-> 0 Identifier ( "rem" 
                  ) |-> 4 )
            </gstructs>
            <local-statics>
                .Map
            </local-statics>
        </tu>
        <tu>
            <tu-id>
                "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c"
            </tu-id>
            <next-unnamed>
                0
            </next-unnamed>
            <update>
                <version>
                    0
                </version>
                <original-func>
                    SetItem(Identifier ( "__debug" ))
                    SetItem(Identifier ( "abort" ))
                    SetItem(Identifier ( "atoi" ))
                    SetItem(Identifier ( "calloc" ))
                    SetItem(Identifier ( "exit" ))
                    SetItem(Identifier ( "free" ))
                    SetItem(Identifier ( "malloc" ))
                    SetItem(Identifier ( "rand" ))
                    SetItem(Identifier ( "realloc" ))
                    SetItem(Identifier ( "srand" ))
                </original-func>
                <wanted>
                    .Set
                </wanted>
                <patch-tu>
                    .Set
                </patch-tu>
                <cap-point>
                    .Set
                </cap-point>
                <wanted-struct>
                    .Set
                </wanted-struct>
                <original-struct>
                    SetItem(Identifier ( "div_t_" ))
                    SetItem(Identifier ( "ldiv_t_" ))
                </original-struct>
                <update-point-pair>
                    .Set
                </update-point-pair>
                <semantic-points>
                    .Map
                </semantic-points>
                <capability>
                    .Map
                </capability>
                <induced-points>
                    .Map
                </induced-points>
                <struct-restriction>
                    .Map
                </struct-restriction>
            </update>
            <incomplete-tags>
                .Set
            </incomplete-tags>
            <genv>
                Identifier ( "__debug" ) |-> 5 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
                Identifier ( "abort" ) |-> 8 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
                Identifier ( "atoi" ) |-> 0 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
                Identifier ( "calloc" ) |-> 3 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
                Identifier ( "exit" ) |-> 4 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
                Identifier ( "free" ) |-> 15 @ static ( "builtin" )
                Identifier ( "malloc" ) |-> 18 @ static ( "builtin" )
                Identifier ( "rand" ) |-> 7 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
                Identifier ( "realloc" ) |-> 1 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
                Identifier ( "srand" ) |-> 6 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
            </genv>
            <gtypes>
                Identifier ( "__debug" ) |-> t ( .Set , functionType ( t ( 
                  .Set , void ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "abort" ) |-> t ( .Set , functionType ( t ( .Set 
                  , void ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "atoi" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
                  ) , signed-char ) ) )) ) )
                Identifier ( "calloc" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   unsigned-int )) ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "exit" ) |-> t ( .Set , functionType ( t ( .Set ,
                   void ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "free" ) |-> t ( .Set , functionType ( t ( .Set ,
                   void ) , ListItem(t ( .Set , pointerType ( t ( .Set , void 
                  ) ) )) ) )
                Identifier ( "malloc" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   unsigned-int )) ) )
                Identifier ( "rand" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "realloc" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( 
                  .Set , pointerType ( t ( .Set , void ) ) )) ListItem(t ( 
                  .Set , unsigned-int )) ) )
                Identifier ( "srand" ) |-> t ( .Set , functionType ( t ( .Set 
                  , void ) , ListItem(t ( .Set , unsigned-int )) ) )
                typedef ( Identifier ( "div_t" ) ) |-> t ( .Set , structType (
                   Identifier ( "div_t__old" ) , 64 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , int ) , Identifier ( "quot" ) 
                  )) ListItem(typedDeclaration ( t ( .Set , int ) , Identifier
                   ( "rem" ) )) , Identifier ( "quot" ) |-> t ( .Set , int ) 
                  Identifier ( "rem" ) |-> t ( .Set , int ) , Identifier ( 
                  "quot" ) |-> 0 Identifier ( "rem" ) |-> 4 ) ) )
                typedef ( Identifier ( "ldiv_t" ) ) |-> t ( .Set , structType 
                  ( Identifier ( "ldiv_t__old" ) , 64 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , long-int ) , Identifier ( 
                  "quot" ) )) ListItem(typedDeclaration ( t ( .Set , long-int 
                  ) , Identifier ( "rem" ) )) , Identifier ( "quot" ) |-> t ( 
                  .Set , long-int ) Identifier ( "rem" ) |-> t ( .Set , 
                  long-int ) , Identifier ( "quot" ) |-> 0 Identifier ( "rem" 
                  ) |-> 4 ) ) )
                typedef ( Identifier ( "max_align_t" ) ) |-> t ( .Set , 
                  signed-char )
                typedef ( Identifier ( "ptrdiff_t" ) ) |-> t ( .Set , int )
                typedef ( Identifier ( "size_t" ) ) |-> t ( .Set , 
                  unsigned-int )
                typedef ( Identifier ( "wchar_t" ) ) |-> t ( .Set , int )
            </gtypes>
            <local-types>
                kpair ( Identifier ( "res" ) , 1 ) |-> .K
            </local-types>
            <local-structs>
                .Map
            </local-structs>
            <goto-map>
                Identifier ( "atoi" ) |-> map ( funLabel ( Identifier ( "atoi"
                   ) ) |-> gotoObject ( 0 , .List , Block ( 1 , list ( .List )
                   , list ( ListItem(CodeLoc ( DeclarationDefinition ( 
                  InitNameGroup ( Specifier ( list ( ListItem(Int) ) ) , list 
                  ( ListItem(InitName ( Name ( Identifier ( "res" ) , JustBase
                   ) , SingleInit ( tv ( 0 , t ( .Set , int ) ) ) )) ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" ,
                   4 , 2 , 0 ) )) ListItem(CodeLoc ( While ( * Identifier ( 
                  "c" ) >= tv ( 48 , t ( .Set , int ) ) && * Identifier ( "c" 
                  ) <= tv ( 57 , t ( .Set , int ) ) , BlockStatement ( Block (
                   2 , list ( .List ) , list ( ListItem(CodeLoc ( Computation 
                  ( Identifier ( "res" ) := Identifier ( "res" ) * tv ( 10 , t
                   ( .Set , int ) ) + * Identifier ( "c" ) ++ - tv ( 48 , t ( 
                  .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" ,
                   6 , 3 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" ,
                   5 , 2 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "res" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" ,
                   7 , 2 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
            </goto-map>
            <gstructs>
                Identifier ( "div_t__old" ) |-> fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , int ) , Identifier ( "quot" ) 
                  )) ListItem(typedDeclaration ( t ( .Set , int ) , Identifier
                   ( "rem" ) )) , Identifier ( "quot" ) |-> t ( .Set , int ) 
                  Identifier ( "rem" ) |-> t ( .Set , int ) , Identifier ( 
                  "quot" ) |-> 0 Identifier ( "rem" ) |-> 4 )
                Identifier ( "ldiv_t__old" ) |-> fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , long-int ) , Identifier ( 
                  "quot" ) )) ListItem(typedDeclaration ( t ( .Set , long-int 
                  ) , Identifier ( "rem" ) )) , Identifier ( "quot" ) |-> t ( 
                  .Set , long-int ) Identifier ( "rem" ) |-> t ( .Set , 
                  long-int ) , Identifier ( "quot" ) |-> 0 Identifier ( "rem" 
                  ) |-> 4 )
            </gstructs>
            <local-statics>
                .Map
            </local-statics>
        </tu>
        <tu>
            <tu-id>
                "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
            </tu-id>
            <next-unnamed>
                33
            </next-unnamed>
            <update>
                <version>
                    0
                </version>
                <original-func>
                    SetItem(Identifier ( "__debug" ))
                    SetItem(Identifier ( "abort" ))
                    SetItem(Identifier ( "atoi" ))
                    SetItem(Identifier ( "calloc" ))
                    SetItem(Identifier ( "exit" ))
                    SetItem(Identifier ( "free" ))
                    SetItem(Identifier ( "malloc" ))
                    SetItem(Identifier ( "memchr" ))
                    SetItem(Identifier ( "memcmp" ))
                    SetItem(Identifier ( "memcpy" ))
                    SetItem(Identifier ( "memmove" ))
                    SetItem(Identifier ( "memset" ))
                    SetItem(Identifier ( "rand" ))
                    SetItem(Identifier ( "realloc" ))
                    SetItem(Identifier ( "srand" ))
                    SetItem(Identifier ( "strcat" ))
                    SetItem(Identifier ( "strchr" ))
                    SetItem(Identifier ( "strcmp" ))
                    SetItem(Identifier ( "strcpy" ))
                    SetItem(Identifier ( "strcspn" ))
                    SetItem(Identifier ( "strlen" ))
                    SetItem(Identifier ( "strncat" ))
                    SetItem(Identifier ( "strncmp" ))
                    SetItem(Identifier ( "strncpy" ))
                    SetItem(Identifier ( "strpbrk" ))
                    SetItem(Identifier ( "strrchr" ))
                    SetItem(Identifier ( "strspn" ))
                    SetItem(Identifier ( "strstr" ))
                    SetItem(Identifier ( "strtok" ))
                    SetItem(Identifier ( "strtok_r" ))
                </original-func>
                <wanted>
                    .Set
                </wanted>
                <patch-tu>
                    .Set
                </patch-tu>
                <cap-point>
                    .Set
                </cap-point>
                <wanted-struct>
                    .Set
                </wanted-struct>
                <original-struct>
                    SetItem(Identifier ( "div_t_" ))
                    SetItem(Identifier ( "ldiv_t_" ))
                </original-struct>
                <update-point-pair>
                    .Set
                </update-point-pair>
                <semantic-points>
                    .Map
                </semantic-points>
                <capability>
                    .Map
                </capability>
                <induced-points>
                    .Map
                </induced-points>
                <struct-restriction>
                    .Map
                </struct-restriction>
            </update>
            <incomplete-tags>
                .Set
            </incomplete-tags>
            <genv>
                Identifier ( "__debug" ) |-> 25 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "abort" ) |-> 28 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "atoi" ) |-> 29 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "calloc" ) |-> 23 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "exit" ) |-> 24 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "free" ) |-> 15 @ static ( "builtin" )
                Identifier ( "malloc" ) |-> 18 @ static ( "builtin" )
                Identifier ( "memchr" ) |-> 3 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "memcmp" ) |-> 17 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "memcpy" ) |-> 16 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "memmove" ) |-> 12 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "memset" ) |-> 2 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "rand" ) |-> 27 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "realloc" ) |-> 21 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "srand" ) |-> 26 @ link ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strcat" ) |-> 18 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strchr" ) |-> 13 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strcmp" ) |-> 11 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strcpy" ) |-> 28 @ static ( "builtin" )
                Identifier ( "strcspn" ) |-> 4 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strlen" ) |-> 1 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strncat" ) |-> 19 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strncmp" ) |-> 14 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strncpy" ) |-> 0 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strpbrk" ) |-> 5 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strrchr" ) |-> 15 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strspn" ) |-> 6 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strstr" ) |-> 7 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strtok" ) |-> 9 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
                Identifier ( "strtok_r" ) |-> 8 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
            </genv>
            <gtypes>
                Identifier ( "__debug" ) |-> t ( .Set , functionType ( t ( 
                  .Set , void ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "abort" ) |-> t ( .Set , functionType ( t ( .Set 
                  , void ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "atoi" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
                  ) , signed-char ) ) )) ) )
                Identifier ( "calloc" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   unsigned-int )) ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "exit" ) |-> t ( .Set , functionType ( t ( .Set ,
                   void ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "free" ) |-> t ( .Set , functionType ( t ( .Set ,
                   void ) , ListItem(t ( .Set , pointerType ( t ( .Set , void 
                  ) ) )) ) )
                Identifier ( "malloc" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   unsigned-int )) ) )
                Identifier ( "memchr" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   pointerType ( t ( SetItem(Const) , void ) ) )) ListItem(t (
                   .Set , int )) ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "memcmp" ) |-> t ( .Set , functionType ( t ( .Set
                   , int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(
                  Const) , void ) ) )) ListItem(t ( .Set , pointerType ( t ( 
                  SetItem(Const) , void ) ) )) ListItem(t ( .Set , 
                  unsigned-int )) ) )
                Identifier ( "memcpy" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( 
                  SetItem(Restrict) , pointerType ( t ( .Set , void ) ) )) 
                  ListItem(t ( SetItem(Restrict) , pointerType ( t ( SetItem(
                  Const) , void ) ) )) ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "memmove" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( 
                  .Set , pointerType ( t ( .Set , void ) ) )) ListItem(t ( 
                  .Set , pointerType ( t ( SetItem(Const) , void ) ) )) 
                  ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "memset" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , 
                  int )) ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "rand" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "realloc" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( 
                  .Set , pointerType ( t ( .Set , void ) ) )) ListItem(t ( 
                  .Set , unsigned-int )) ) )
                Identifier ( "srand" ) |-> t ( .Set , functionType ( t ( .Set 
                  , void ) , ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "strcat" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t (
                   SetItem(Restrict) , pointerType ( t ( .Set , signed-char ) 
                  ) )) ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
                  SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "strchr" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t (
                   .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )
                  ) ListItem(t ( .Set , int )) ) )
                Identifier ( "strcmp" ) |-> t ( .Set , functionType ( t ( .Set
                   , int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(
                  Const) , signed-char ) ) )) ListItem(t ( .Set , pointerType 
                  ( t ( SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "strcpy" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t (
                   .Set , pointerType ( t ( .Set , signed-char ) ) )) 
                  ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
                  signed-char ) ) )) ) )
                Identifier ( "strcspn" ) |-> t ( .Set , functionType ( t ( 
                  .Set , unsigned-int ) , ListItem(t ( .Set , pointerType ( t 
                  ( SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , 
                  pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "strlen" ) |-> t ( .Set , functionType ( t ( .Set
                   , unsigned-int ) , ListItem(t ( .Set , pointerType ( t ( 
                  SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "strncat" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , signed-char ) ) ) , 
                  ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
                  signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
                  pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
                  ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "strncmp" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , pointerType ( t ( 
                  SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , 
                  pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
                  ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "strncpy" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , signed-char ) ) ) , 
                  ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
                  signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
                  pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
                  ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "strpbrk" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , signed-char ) ) ) , 
                  ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
                  signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( 
                  SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "strrchr" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , signed-char ) ) ) , 
                  ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
                  signed-char ) ) )) ListItem(t ( .Set , int )) ) )
                Identifier ( "strspn" ) |-> t ( .Set , functionType ( t ( .Set
                   , unsigned-int ) , ListItem(t ( .Set , pointerType ( t ( 
                  SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , 
                  pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "strstr" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t (
                   .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )
                  ) ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
                  signed-char ) ) )) ) )
                Identifier ( "strtok" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t (
                   SetItem(Restrict) , pointerType ( t ( .Set , signed-char ) 
                  ) )) ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
                  SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "strtok_r" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , signed-char ) ) ) , 
                  ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
                  signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
                  pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
                  ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
                  pointerType ( t ( .Set , signed-char ) ) ) ) )) ) )
                typedef ( Identifier ( "div_t" ) ) |-> t ( .Set , structType (
                   Identifier ( "div_t__old" ) , 64 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , int ) , Identifier ( "quot" ) 
                  )) ListItem(typedDeclaration ( t ( .Set , int ) , Identifier
                   ( "rem" ) )) , Identifier ( "quot" ) |-> t ( .Set , int ) 
                  Identifier ( "rem" ) |-> t ( .Set , int ) , Identifier ( 
                  "quot" ) |-> 0 Identifier ( "rem" ) |-> 4 ) ) )
                typedef ( Identifier ( "ldiv_t" ) ) |-> t ( .Set , structType 
                  ( Identifier ( "ldiv_t__old" ) , 64 , fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , long-int ) , Identifier ( 
                  "quot" ) )) ListItem(typedDeclaration ( t ( .Set , long-int 
                  ) , Identifier ( "rem" ) )) , Identifier ( "quot" ) |-> t ( 
                  .Set , long-int ) Identifier ( "rem" ) |-> t ( .Set , 
                  long-int ) , Identifier ( "quot" ) |-> 0 Identifier ( "rem" 
                  ) |-> 4 ) ) )
                typedef ( Identifier ( "max_align_t" ) ) |-> t ( .Set , 
                  signed-char )
                typedef ( Identifier ( "ptrdiff_t" ) ) |-> t ( .Set , int )
                typedef ( Identifier ( "size_t" ) ) |-> t ( .Set , 
                  unsigned-int )
                typedef ( Identifier ( "wchar_t" ) ) |-> t ( .Set , int )
            </gtypes>
            <local-types>
                kpair ( Identifier ( "dst8" ) , 93 ) |-> .K
                kpair ( Identifier ( "last" ) , 85 ) |-> .K
                kpair ( Identifier ( "needlelen" ) , 44 ) |-> .K
                kpair ( Identifier ( "ptr" ) , 12 ) |-> .K
                kpair ( Identifier ( "ret" ) , 1 ) |-> .K
                kpair ( Identifier ( "s" ) , 9 ) |-> .K
                kpair ( Identifier ( "s" ) , 106 ) |-> .K
                kpair ( Identifier ( "s" ) , 108 ) |-> .K
                kpair ( Identifier ( "sbegin" ) , 55 ) |-> .K
                kpair ( Identifier ( "sc1" ) , 24 ) |-> .K
                kpair ( Identifier ( "sc1" ) , 30 ) |-> .K
                kpair ( Identifier ( "sc1" ) , 38 ) |-> .K
                kpair ( Identifier ( "send" ) , 55 ) |-> .K
                kpair ( Identifier ( "src" ) , 16 ) |-> .K
                kpair ( Identifier ( "src8" ) , 93 ) |-> .K
                kpair ( Identifier ( "ssave" ) , 62 ) |-> t ( SetItem(Static) 
                  , pointerType ( t ( .Set , signed-char ) ) )
                kpair ( Identifier ( "tmp" ) , 70 ) |-> .K
                kpair ( Identifier ( "uc" ) , 16 ) |-> .K
                kpair ( Identifier ( "uc1" ) , 76 ) |-> .K
                kpair ( Identifier ( "uc2" ) , 76 ) |-> .K
                kpair ( Identifier ( "us1" ) , 98 ) |-> .K
                kpair ( Identifier ( "us2" ) , 98 ) |-> .K
            </local-types>
            <local-structs>
                .Map
            </local-structs>
            <goto-map>
                Identifier ( "memchr" ) |-> map ( funLabel ( Identifier ( 
                  "memchr" ) ) |-> gotoObject ( 0 , .List , Block ( 16 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition 
                  ( InitNameGroup ( Specifier ( list ( ListItem(Const) 
                  ListItem(Unsigned) ListItem(Char) ) ) , list ( ListItem(
                  InitName ( Name ( Identifier ( "src" ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) ) , SingleInit ( 
                  Identifier ( "s" ) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   35 , 7 , 0 ) )) ListItem(CodeLoc ( DeclarationDefinition ( 
                  InitNameGroup ( Specifier ( list ( ListItem(Unsigned) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "uc" ) , JustBase ) , SingleInit ( Identifier (
                   "c" ) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   36 , 7 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( "n"
                   ) -- != tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 17 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 18 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( IfThenElse ( * Identifier ( "src" ) == 
                  Identifier ( "uc" ) , BlockStatement ( Block ( 20 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( BlockStatement ( Block (
                   21 , list ( .List ) , list ( ListItem(CodeLoc ( Return ( 
                  Cast ( Specifier ( list ( ListItem(Void) ) ) , PointerType (
                   Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "src" ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   39 , 19 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   38 , 29 , 0 ) )) ) ) ) , BlockStatement ( Block ( 19 , list
                   ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   38 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   38 , 13 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "src" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   41 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   37 , 24 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   37 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Cast ( 
                  Specifier ( list ( ListItem(Void) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , tv ( 0 , t ( 
                  .Set , int ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   43 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "memcmp" ) |-> map ( funLabel ( Identifier ( 
                  "memcmp" ) ) |-> gotoObject ( 0 , .List , Block ( 98 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition 
                  ( InitNameGroup ( Specifier ( list ( ListItem(Const) 
                  ListItem(Unsigned) ListItem(Char) ) ) , list ( ListItem(
                  InitName ( Name ( Identifier ( "us1" ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) ) , SingleInit ( 
                  Cast ( Specifier ( list ( ListItem(Const) ListItem(Unsigned)
                   ListItem(Char) ) ) , PointerType ( Specifier ( list ( .List
                   ) ) , JustBase ) , Identifier ( "s1" ) ) ) )) ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   185 , 7 , 0 ) )) ListItem(CodeLoc ( DeclarationDefinition (
                   InitNameGroup ( Specifier ( list ( ListItem(Const) 
                  ListItem(Unsigned) ListItem(Char) ) ) , list ( ListItem(
                  InitName ( Name ( Identifier ( "us2" ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) ) , SingleInit ( 
                  Cast ( Specifier ( list ( ListItem(Const) ListItem(Unsigned)
                   ListItem(Char) ) ) , PointerType ( Specifier ( list ( .List
                   ) ) , JustBase ) , Identifier ( "s2" ) ) ) )) ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   186 , 7 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( 
                  "n" ) -- != tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 101 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 102 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( IfThenElse ( * Identifier ( "us1" ) != * 
                  Identifier ( "us2" ) , BlockStatement ( Block ( 104 , list (
                   .List ) , list ( ListItem(CodeLoc ( BlockStatement ( Block 
                  ( 105 , list ( .List ) , list ( ListItem(CodeLoc ( Return ( 
                  * Identifier ( "us1" ) < * Identifier ( "us2" ) ? - tv ( 1 ,
                   t ( .Set , int ) ) : + tv ( 1 , t ( .Set , int ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   189 , 19 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   188 , 31 , 0 ) )) ) ) ) , BlockStatement ( Block ( 103 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   188 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   188 , 13 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "us1" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   191 , 13 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "us2" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   192 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   187 , 24 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   187 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( tv ( 0 , t ( 
                  .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   194 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "memcpy" ) |-> map ( funLabel ( Identifier ( 
                  "memcpy" ) ) |-> gotoObject ( 0 , .List , Block ( 93 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition 
                  ( InitNameGroup ( Specifier ( list ( ListItem(Unsigned) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "dst8" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , SingleInit ( Cast ( Specifier ( 
                  list ( ListItem(Unsigned) ListItem(Char) ) ) , PointerType (
                   Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "dest" ) ) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   174 , 7 , 0 ) )) ListItem(CodeLoc ( DeclarationDefinition (
                   InitNameGroup ( Specifier ( list ( ListItem(Unsigned) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "src8" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , SingleInit ( Cast ( Specifier ( 
                  list ( ListItem(Unsigned) ListItem(Char) ) ) , PointerType (
                   Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "src" ) ) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   175 , 7 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( 
                  "count" ) -- , BlockStatement ( Block ( 96 , list ( .List ) 
                  , list ( ListItem(CodeLoc ( BlockStatement ( Block ( 97 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Computation ( * 
                  Identifier ( "dst8" ) ++ := * Identifier ( "src8" ) ++ ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   178 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   177 , 23 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   177 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "dest" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   180 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "memmove" ) |-> map ( funLabel ( Identifier ( 
                  "memmove" ) ) |-> gotoObject ( 0 , .List , Block ( 70 , list
                   ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition
                   ( InitNameGroup ( Specifier ( list ( ListItem(Unsigned) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "tmp" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , SingleInit ( Call ( Identifier ( 
                  "malloc" ) , list ( ListItem(Identifier ( "n" )) ) ) ) )) ) 
                  ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   116 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( Call ( 
                  Identifier ( "memcpy" ) , list ( ListItem(Identifier ( "tmp"
                   )) ListItem(Identifier ( "s2" )) ListItem(Identifier ( "n" 
                  )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   117 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( Call ( 
                  Identifier ( "memcpy" ) , list ( ListItem(Identifier ( "s1" 
                  )) ListItem(Identifier ( "tmp" )) ListItem(Identifier ( "n" 
                  )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   118 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( Call ( 
                  Identifier ( "free" ) , list ( ListItem(Identifier ( "tmp" )
                  ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   119 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "s1" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   120 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "memset" ) |-> map ( funLabel ( Identifier ( 
                  "memset" ) ) |-> gotoObject ( 0 , .List , Block ( 12 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition 
                  ( InitNameGroup ( Specifier ( list ( ListItem(Unsigned) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "ptr" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , SingleInit ( Cast ( Specifier ( 
                  list ( ListItem(Unsigned) ListItem(Char) ) ) , PointerType (
                   Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "dest" ) ) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   26 , 7 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( 
                  "len" ) -- > tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 14 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 15 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Computation ( * Identifier ( "ptr" ) ++ 
                  := Identifier ( "value" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   28 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   27 , 25 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   27 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "dest" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   30 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strcat" ) |-> map ( funLabel ( Identifier ( 
                  "strcat" ) ) |-> gotoObject ( 0 , .List , Block ( 106 , list
                   ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition
                   ( InitNameGroup ( Specifier ( list ( ListItem(Char) ) ) , 
                  list ( ListItem(InitName ( Name ( Identifier ( "s" ) , 
                  PointerType ( Specifier ( list ( .List ) ) , JustBase ) ) , 
                  SingleInit ( Identifier ( "s1" ) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   199 , 7 , 0 ) )) ListItem(CodeLoc ( While ( * Identifier ( 
                  "s" ) != tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 107 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  Computation ( Identifier ( "s" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   202 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   201 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( Call ( 
                  Identifier ( "strcpy" ) , list ( ListItem(Identifier ( "s" )
                  ) ListItem(Identifier ( "s2" )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   204 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "s1" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   205 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strchr" ) |-> map ( funLabel ( Identifier ( 
                  "strchr" ) ) |-> gotoObject ( 0 , .List , Block ( 71 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( While ( * Identifier (
                   "s" ) != tv ( 0 , t ( .Set , int ) ) && * Identifier ( "s" 
                  ) != Cast ( Specifier ( list ( ListItem(Char) ) ) , JustBase
                   , Identifier ( "c" ) ) , BlockStatement ( Block ( 72 , list
                   ( .List ) , list ( ListItem(CodeLoc ( Computation ( 
                  Identifier ( "s" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   129 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   128 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( * Identifier (
                   "s" ) == Identifier ( "c" ) ? Cast ( Specifier ( list ( 
                  ListItem(Char) ) ) , PointerType ( Specifier ( list ( .List 
                  ) ) , JustBase ) , Identifier ( "s" ) ) : Cast ( Specifier (
                   list ( ListItem(Void) ) ) , PointerType ( Specifier ( list 
                  ( .List ) ) , JustBase ) , tv ( 0 , t ( .Set , int ) ) ) ) ,
                   CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   130 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strcmp" ) |-> map ( funLabel ( Identifier ( 
                  "strcmp" ) ) |-> gotoObject ( 0 , .List , Block ( 63 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( For ( 64 , 
                  ForClauseExpression ( emptyValue ) , * Identifier ( "s1" ) 
                  == * Identifier ( "s2" ) , Comma ( list ( ListItem(++ 
                  Identifier ( "s1" )) ListItem(++ Identifier ( "s2" )) ) ) , 
                  BlockStatement ( Block ( 65 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( IfThenElse ( * Identifier ( "s1" ) == tv 
                  ( 0 , t ( .Set , int ) ) , BlockStatement ( Block ( 67 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Return ( tv ( 0 ,
                   t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   111 , 19 , 0 ) )) ) ) ) , BlockStatement ( Block ( 66 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   110 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   110 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   109 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( * Cast ( 
                  Specifier ( list ( ListItem(Unsigned) ListItem(Char) ) ) , 
                  PointerType ( Specifier ( list ( .List ) ) , JustBase ) , 
                  Identifier ( "s1" ) ) < * Cast ( Specifier ( list ( 
                  ListItem(Unsigned) ListItem(Char) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "s2" ) ) ? - tv ( 1 , t ( .Set , int ) ) : tv ( 1 , t ( .Set
                   , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   112 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strcspn" ) |-> map ( funLabel ( Identifier ( 
                  "strcspn" ) ) |-> gotoObject ( 0 , .List , Block ( 24 , list
                   ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition
                   ( InitNameGroup ( Specifier ( list ( ListItem(Const) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "sc1" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , NoInit )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   48 , 7 , 0 ) )) ListItem(CodeLoc ( For ( 25 , 
                  ForClauseExpression ( Identifier ( "sc1" ) := Identifier ( 
                  "s1" ) ) , * Identifier ( "sc1" ) != tv ( 0 , t ( .Set , int
                   ) ) , Identifier ( "sc1" ) ++ , BlockStatement ( Block ( 26
                   , list ( .List ) , list ( ListItem(CodeLoc ( IfThenElse ( 
                  Call ( Identifier ( "strchr" ) , list ( ListItem(Identifier 
                  ( "s2" )) ListItem(* Identifier ( "sc1" )) ) ) != Cast ( 
                  Specifier ( list ( ListItem(Void) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , tv ( 0 , t ( 
                  .Set , int ) ) ) , BlockStatement ( Block ( 28 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( Return ( Identifier ( 
                  "sc1" ) - Identifier ( "s1" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   51 , 19 , 0 ) )) ) ) ) , BlockStatement ( Block ( 27 , list
                   ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   50 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   50 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   49 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "sc1" ) - Identifier ( "s1" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   52 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strlen" ) |-> map ( funLabel ( Identifier ( 
                  "strlen" ) ) |-> gotoObject ( 0 , .List , Block ( 9 , list (
                   .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition (
                   InitNameGroup ( Specifier ( list ( ListItem(Const) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "s" ) , PointerType ( Specifier ( list ( .List 
                  ) ) , JustBase ) ) , NoInit )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   20 , 7 , 0 ) )) ListItem(CodeLoc ( For ( 10 , 
                  ForClauseExpression ( Identifier ( "s" ) := Identifier ( 
                  "str" ) ) , * Identifier ( "s" ) , ++ Identifier ( "s" ) , 
                  BlockStatement ( Block ( 11 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   21 , 29 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   21 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "s" ) - Identifier ( "str" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   22 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strncat" ) |-> map ( funLabel ( Identifier ( 
                  "strncat" ) ) |-> gotoObject ( 0 , .List , Block ( 108 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( 
                  DeclarationDefinition ( InitNameGroup ( Specifier ( list ( 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "s" ) , PointerType ( Specifier ( list ( .List 
                  ) ) , JustBase ) ) , SingleInit ( Identifier ( "s1" ) ) )) )
                   ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   210 , 7 , 0 ) )) ListItem(CodeLoc ( While ( * Identifier ( 
                  "s" ) != tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 109 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  Computation ( Identifier ( "s" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   213 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   212 , 7 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( 
                  "n" ) != tv ( 0 , t ( .Set , int ) ) && * Identifier ( "s" )
                   := * Identifier ( "s2" ) ++ != tv ( 0 , t ( .Set , int ) ) 
                  , BlockStatement ( Block ( 110 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 111 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( Computation ( Identifier
                   ( "n" ) -- ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   220 , 13 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "s" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   221 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   219 , 46 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   219 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( * 
                  Identifier ( "s" ) := tv ( 0 , t ( .Set , int ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   223 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "s1" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   224 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strncmp" ) |-> map ( funLabel ( Identifier ( 
                  "strncmp" ) ) |-> gotoObject ( 0 , .List , Block ( 76 , list
                   ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition
                   ( InitNameGroup ( Specifier ( list ( ListItem(Unsigned) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "uc1" ) , JustBase ) , NoInit )) ListItem(
                  InitName ( Name ( Identifier ( "uc2" ) , JustBase ) , NoInit
                   )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   135 , 7 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier
                   ( "n" ) == tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 78 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  Return ( tv ( 0 , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   138 , 13 , 0 ) )) ) ) ) , BlockStatement ( Block ( 77 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   137 , 7 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   137 , 7 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( 
                  "n" ) -- > tv ( 0 , t ( .Set , int ) ) && * Identifier ( 
                  "s1" ) == * Identifier ( "s2" ) , BlockStatement ( Block ( 
                  79 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 80 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( IfThenElse ( Identifier ( "n" ) == tv ( 0
                   , t ( .Set , int ) ) || * Identifier ( "s1" ) == tv ( 0 , t
                   ( .Set , int ) ) , BlockStatement ( Block ( 82 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( Return ( tv ( 0 , t ( 
                  .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   144 , 19 , 0 ) )) ) ) ) , BlockStatement ( Block ( 81 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   143 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   143 , 13 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "s1" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   145 , 13 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "s2" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   146 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   140 , 37 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   140 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "uc1" ) := * Cast ( Specifier ( list ( 
                  ListItem(Unsigned) ListItem(Char) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "s1" ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   148 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "uc2" ) := * Cast ( Specifier ( list ( 
                  ListItem(Unsigned) ListItem(Char) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "s2" ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   149 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "uc1" ) < Identifier ( "uc2" ) ? - tv ( 1 , t ( .Set , int )
                   ) : Identifier ( "uc1" ) > Identifier ( "uc2" ) ) , CabsLoc
                   ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   150 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strncpy" ) |-> map ( funLabel ( Identifier ( 
                  "strncpy" ) ) |-> gotoObject ( 0 , .List , Block ( 1 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition 
                  ( InitNameGroup ( Specifier ( list ( ListItem(Char) ) ) , 
                  list ( ListItem(InitName ( Name ( Identifier ( "ret" ) , 
                  PointerType ( Specifier ( list ( .List ) ) , JustBase ) ) , 
                  SingleInit ( Identifier ( "dest" ) ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   7 , 7 , 0 ) )) ListItem(CodeLoc ( DoWhile ( * Identifier ( 
                  "dest" ) ++ := * Identifier ( "src" ) ++ , BlockStatement ( 
                  Block ( 2 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  BlockStatement ( Block ( 3 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( IfThenElse ( ! Identifier ( "n" ) -- , 
                  BlockStatement ( Block ( 5 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 6 , list ( .List
                   ) , list ( ListItem(CodeLoc ( Return ( Identifier ( "ret" )
                   ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   10 , 19 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   9 , 23 , 0 ) )) ) ) ) , BlockStatement ( Block ( 4 , list (
                   .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   9 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   9 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   8 , 10 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   8 , 7 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( "n" 
                  ) -- , BlockStatement ( Block ( 7 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 8 , list ( .List
                   ) , list ( ListItem(CodeLoc ( Computation ( * Identifier ( 
                  "dest" ) ++ := tv ( 0 , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   14 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   13 , 19 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   13 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "ret" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   16 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strpbrk" ) |-> map ( funLabel ( Identifier ( 
                  "strpbrk" ) ) |-> gotoObject ( 0 , .List , Block ( 30 , list
                   ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition
                   ( InitNameGroup ( Specifier ( list ( ListItem(Const) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "sc1" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , NoInit )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   57 , 7 , 0 ) )) ListItem(CodeLoc ( For ( 31 , 
                  ForClauseExpression ( Identifier ( "sc1" ) := Identifier ( 
                  "s1" ) ) , * Identifier ( "sc1" ) != tv ( 0 , t ( .Set , int
                   ) ) , Identifier ( "sc1" ) ++ , BlockStatement ( Block ( 32
                   , list ( .List ) , list ( ListItem(CodeLoc ( IfThenElse ( 
                  Call ( Identifier ( "strchr" ) , list ( ListItem(Identifier 
                  ( "s2" )) ListItem(* Identifier ( "sc1" )) ) ) != Cast ( 
                  Specifier ( list ( ListItem(Void) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , tv ( 0 , t ( 
                  .Set , int ) ) ) , BlockStatement ( Block ( 34 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( Return ( Cast ( 
                  Specifier ( list ( ListItem(Char) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "sc1" ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   60 , 19 , 0 ) )) ) ) ) , BlockStatement ( Block ( 33 , list
                   ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   59 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   59 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   58 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Cast ( 
                  Specifier ( list ( ListItem(Void) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , tv ( 0 , t ( 
                  .Set , int ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   61 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strrchr" ) |-> map ( funLabel ( Identifier ( 
                  "strrchr" ) ) |-> gotoObject ( 0 , .List , Block ( 85 , list
                   ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition
                   ( InitNameGroup ( Specifier ( list ( ListItem(Const) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "last" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , SingleInit ( Cast ( Specifier ( 
                  list ( ListItem(Void) ) ) , PointerType ( Specifier ( list (
                   .List ) ) , JustBase ) , tv ( 0 , t ( .Set , int ) ) ) ) ))
                   ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   155 , 7 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( Identifier
                   ( "c" ) == tv ( 0 , t ( .Set , int ) ) , BlockStatement ( 
                  Block ( 88 , list ( .List ) , list ( ListItem(CodeLoc ( 
                  Return ( Call ( Identifier ( "strchr" ) , list ( ListItem(
                  Identifier ( "s" )) ListItem(Identifier ( "c" )) ) ) ) , 
                  CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   160 , 13 , 0 ) )) ) ) ) , BlockStatement ( Block ( 87 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   159 , 7 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   159 , 7 , 0 ) )) ListItem(CodeLoc ( While ( Identifier ( 
                  "s" ) := Call ( Identifier ( "strchr" ) , list ( ListItem(
                  Identifier ( "s" )) ListItem(Identifier ( "c" )) ) ) != Cast
                   ( Specifier ( list ( ListItem(Void) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , tv ( 0 , t ( 
                  .Set , int ) ) ) , BlockStatement ( Block ( 89 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( BlockStatement ( Block (
                   90 , list ( .List ) , list ( ListItem(CodeLoc ( Computation
                   ( Identifier ( "last" ) := Identifier ( "s" ) ) , CabsLoc (
                   "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
                  , 163 , 13 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "s" ) ++ ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   164 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   162 , 49 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   162 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Cast ( 
                  Specifier ( list ( ListItem(Char) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , Identifier ( 
                  "last" ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   166 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strspn" ) |-> map ( funLabel ( Identifier ( 
                  "strspn" ) ) |-> gotoObject ( 0 , .List , Block ( 38 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition 
                  ( InitNameGroup ( Specifier ( list ( ListItem(Const) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "sc1" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , NoInit )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   66 , 7 , 0 ) )) ListItem(CodeLoc ( For ( 39 , 
                  ForClauseExpression ( Identifier ( "sc1" ) := Identifier ( 
                  "s1" ) ) , * Identifier ( "sc1" ) != tv ( 0 , t ( .Set , int
                   ) ) , Identifier ( "sc1" ) ++ , BlockStatement ( Block ( 40
                   , list ( .List ) , list ( ListItem(CodeLoc ( IfThenElse ( 
                  Call ( Identifier ( "strchr" ) , list ( ListItem(Identifier 
                  ( "s2" )) ListItem(* Identifier ( "sc1" )) ) ) == Cast ( 
                  Specifier ( list ( ListItem(Void) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , tv ( 0 , t ( 
                  .Set , int ) ) ) , BlockStatement ( Block ( 42 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( Return ( Identifier ( 
                  "sc1" ) - Identifier ( "s1" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   69 , 19 , 0 ) )) ) ) ) , BlockStatement ( Block ( 41 , list
                   ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   68 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   68 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   67 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "sc1" ) - Identifier ( "s1" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   70 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strstr" ) |-> map ( funLabel ( Identifier ( 
                  "strstr" ) ) |-> gotoObject ( 0 , .List , Block ( 44 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition 
                  ( InitNameGroup ( Specifier ( list ( ListItem(Named ( 
                  Identifier ( "size_t" ) )) ) ) , list ( ListItem(InitName ( 
                  Name ( Identifier ( "needlelen" ) , JustBase ) , NoInit )) )
                   ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   75 , 7 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( * 
                  Identifier ( "needle" ) == tv ( 0 , t ( .Set , int ) ) , 
                  BlockStatement ( Block ( 46 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Return ( Cast ( Specifier ( list ( 
                  ListItem(Char) ) ) , PointerType ( Specifier ( list ( .List 
                  ) ) , JustBase ) , Identifier ( "haystack" ) ) ) , CabsLoc (
                   "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
                  , 78 , 13 , 0 ) )) ) ) ) , BlockStatement ( Block ( 45 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   77 , 7 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   77 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( Identifier
                   ( "needlelen" ) := Call ( Identifier ( "strlen" ) , list ( 
                  ListItem(Identifier ( "needle" )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   79 , 7 , 0 ) )) ListItem(CodeLoc ( For ( 48 , 
                  ForClauseExpression ( emptyValue ) , Identifier ( "haystack"
                   ) := Call ( Identifier ( "strchr" ) , list ( ListItem(
                  Identifier ( "haystack" )) ListItem(* Identifier ( "needle" 
                  )) ) ) != Cast ( Specifier ( list ( ListItem(Void) ) ) , 
                  PointerType ( Specifier ( list ( .List ) ) , JustBase ) , tv
                   ( 0 , t ( .Set , int ) ) ) , Identifier ( "haystack" ) ++ ,
                   BlockStatement ( Block ( 49 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( IfThenElse ( Call ( Identifier ( 
                  "strncmp" ) , list ( ListItem(Identifier ( "haystack" )) 
                  ListItem(Identifier ( "needle" )) ListItem(Identifier ( 
                  "needlelen" )) ) ) == tv ( 0 , t ( .Set , int ) ) , 
                  BlockStatement ( Block ( 51 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Return ( Cast ( Specifier ( list ( 
                  ListItem(Char) ) ) , PointerType ( Specifier ( list ( .List 
                  ) ) , JustBase ) , Identifier ( "haystack" ) ) ) , CabsLoc (
                   "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
                  , 82 , 19 , 0 ) )) ) ) ) , BlockStatement ( Block ( 50 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   81 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   81 , 13 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   80 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Cast ( 
                  Specifier ( list ( ListItem(Void) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , tv ( 0 , t ( 
                  .Set , int ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   83 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strtok" ) |-> map ( funLabel ( Identifier ( 
                  "strtok" ) ) |-> gotoObject ( 0 , .List , Block ( 62 , list 
                  ( .List ) , list ( ListItem(CodeLoc ( DeclarationDefinition 
                  ( InitNameGroup ( Specifier ( list ( ListItem(Static) 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "ssave" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , SingleInit ( stringLiteral ( "" )
                   ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   104 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Call ( 
                  Identifier ( "strtok_r" ) , list ( ListItem(Identifier ( 
                  "s1" )) ListItem(Identifier ( "delimiters" )) ListItem(& 
                  Identifier ( "ssave" )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   105 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
                Identifier ( "strtok_r" ) |-> map ( funLabel ( Identifier ( 
                  "strtok_r" ) ) |-> gotoObject ( 0 , .List , Block ( 55 , 
                  list ( .List ) , list ( ListItem(CodeLoc ( 
                  DeclarationDefinition ( InitNameGroup ( Specifier ( list ( 
                  ListItem(Char) ) ) , list ( ListItem(InitName ( Name ( 
                  Identifier ( "sbegin" ) , PointerType ( Specifier ( list ( 
                  .List ) ) , JustBase ) ) , NoInit )) ListItem(InitName ( 
                  Name ( Identifier ( "send" ) , PointerType ( Specifier ( 
                  list ( .List ) ) , JustBase ) ) , NoInit )) ) ) ) , CabsLoc 
                  ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
                   , 88 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( 
                  Identifier ( "sbegin" ) := Identifier ( "s" ) ? Identifier (
                   "s" ) : * Identifier ( "lasts" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   89 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( Identifier
                   ( "sbegin" ) += Call ( Identifier ( "strspn" ) , list ( 
                  ListItem(Identifier ( "sbegin" )) ListItem(Identifier ( 
                  "delimiters" )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   90 , 7 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( * 
                  Identifier ( "sbegin" ) == tv ( 0 , t ( .Set , int ) ) , 
                  BlockStatement ( Block ( 57 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( BlockStatement ( Block ( 58 , list ( 
                  .List ) , list ( ListItem(CodeLoc ( Computation ( * 
                  Identifier ( "lasts" ) := stringLiteral ( "" ) ) , CabsLoc (
                   "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
                  , 92 , 13 , 0 ) )) ListItem(CodeLoc ( Return ( Cast ( 
                  Specifier ( list ( ListItem(Void) ) ) , PointerType ( 
                  Specifier ( list ( .List ) ) , JustBase ) , tv ( 0 , t ( 
                  .Set , int ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   93 , 13 , 0 ) )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   91 , 28 , 0 ) )) ) ) ) , BlockStatement ( Block ( 56 , list
                   ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   91 , 7 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   91 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( Identifier
                   ( "send" ) := Identifier ( "sbegin" ) + Call ( Identifier (
                   "strcspn" ) , list ( ListItem(Identifier ( "sbegin" )) 
                  ListItem(Identifier ( "delimiters" )) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   95 , 7 , 0 ) )) ListItem(CodeLoc ( IfThenElse ( * 
                  Identifier ( "send" ) != tv ( 0 , t ( .Set , int ) ) , 
                  BlockStatement ( Block ( 61 , list ( .List ) , list ( 
                  ListItem(CodeLoc ( Computation ( * Identifier ( "send" ) ++ 
                  := tv ( 0 , t ( .Set , int ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   97 , 13 , 0 ) )) ) ) ) , BlockStatement ( Block ( 60 , list
                   ( .List ) , list ( ListItem(CodeLoc ( Nop , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   96 , 7 , 0 ) )) ) ) ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   96 , 7 , 0 ) )) ListItem(CodeLoc ( Computation ( * 
                  Identifier ( "lasts" ) := Identifier ( "send" ) ) , CabsLoc 
                  ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
                   , 98 , 7 , 0 ) )) ListItem(CodeLoc ( Return ( Identifier ( 
                  "sbegin" ) ) , CabsLoc ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ,
                   99 , 7 , 0 ) )) ) ) ~> Return ( emptyValue ) ~> Return ( 
                  emptyValue ) , .List , .List ) )
            </goto-map>
            <gstructs>
                Identifier ( "div_t__old" ) |-> fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , int ) , Identifier ( "quot" ) 
                  )) ListItem(typedDeclaration ( t ( .Set , int ) , Identifier
                   ( "rem" ) )) , Identifier ( "quot" ) |-> t ( .Set , int ) 
                  Identifier ( "rem" ) |-> t ( .Set , int ) , Identifier ( 
                  "quot" ) |-> 0 Identifier ( "rem" ) |-> 4 )
                Identifier ( "ldiv_t__old" ) |-> fieldInfo ( ListItem(
                  typedDeclaration ( t ( .Set , long-int ) , Identifier ( 
                  "quot" ) )) ListItem(typedDeclaration ( t ( .Set , long-int 
                  ) , Identifier ( "rem" ) )) , Identifier ( "quot" ) |-> t ( 
                  .Set , long-int ) Identifier ( "rem" ) |-> t ( .Set , 
                  long-int ) , Identifier ( "quot" ) |-> 0 Identifier ( "rem" 
                  ) |-> 4 )
            </gstructs>
            <local-statics>
                kpair ( Identifier ( "ssave" ) , 62 ) |-> 10 @ static ( 
                  "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
            </local-statics>
        </tu>
        <tu>
            <tu-id>
                "builtin"
            </tu-id>
            <next-unnamed>
                0
            </next-unnamed>
            <update>
                <version>
                    0
                </version>
                <original-func>
                    SetItem(Identifier ( "__debug" ))
                    SetItem(Identifier ( "__fslCloseFile" ))
                    SetItem(Identifier ( "__fslFGetC" ))
                    SetItem(Identifier ( "__fslOpenFile" ))
                    SetItem(Identifier ( "__fslPutc" ))
                    SetItem(Identifier ( "abort" ))
                    SetItem(Identifier ( "asin" ))
                    SetItem(Identifier ( "atan" ))
                    SetItem(Identifier ( "atan2" ))
                    SetItem(Identifier ( "calloc" ))
                    SetItem(Identifier ( "cos" ))
                    SetItem(Identifier ( "exit" ))
                    SetItem(Identifier ( "exp" ))
                    SetItem(Identifier ( "floor" ))
                    SetItem(Identifier ( "fmod" ))
                    SetItem(Identifier ( "free" ))
                    SetItem(Identifier ( "getchar" ))
                    SetItem(Identifier ( "log" ))
                    SetItem(Identifier ( "malloc" ))
                    SetItem(Identifier ( "printf" ))
                    SetItem(Identifier ( "putchar" ))
                    SetItem(Identifier ( "rand" ))
                    SetItem(Identifier ( "realloc" ))
                    SetItem(Identifier ( "sin" ))
                    SetItem(Identifier ( "snprintf" ))
                    SetItem(Identifier ( "sprintf" ))
                    SetItem(Identifier ( "sqrt" ))
                    SetItem(Identifier ( "srand" ))
                    SetItem(Identifier ( "strcpy" ))
                    SetItem(Identifier ( "tan" ))
                </original-func>
                <wanted>
                    .Set
                </wanted>
                <patch-tu>
                    .Set
                </patch-tu>
                <cap-point>
                    .Set
                </cap-point>
                <wanted-struct>
                    .Set
                </wanted-struct>
                <original-struct>
                    .Set
                </original-struct>
                <update-point-pair>
                    .Set
                </update-point-pair>
                <semantic-points>
                    .Map
                </semantic-points>
                <capability>
                    .Map
                </capability>
                <induced-points>
                    .Map
                </induced-points>
                <struct-restriction>
                    .Map
                </struct-restriction>
            </update>
            <incomplete-tags>
                .Set
            </incomplete-tags>
            <genv>
                Identifier ( "__debug" ) |-> 0 @ static ( "builtin" )
                Identifier ( "__fslCloseFile" ) |-> 1 @ static ( "builtin" )
                Identifier ( "__fslFGetC" ) |-> 2 @ static ( "builtin" )
                Identifier ( "__fslOpenFile" ) |-> 3 @ static ( "builtin" )
                Identifier ( "__fslPutc" ) |-> 4 @ static ( "builtin" )
                Identifier ( "abort" ) |-> 5 @ static ( "builtin" )
                Identifier ( "asin" ) |-> 6 @ static ( "builtin" )
                Identifier ( "atan" ) |-> 7 @ static ( "builtin" )
                Identifier ( "atan2" ) |-> 8 @ static ( "builtin" )
                Identifier ( "calloc" ) |-> 9 @ static ( "builtin" )
                Identifier ( "cos" ) |-> 10 @ static ( "builtin" )
                Identifier ( "exit" ) |-> 11 @ static ( "builtin" )
                Identifier ( "exp" ) |-> 12 @ static ( "builtin" )
                Identifier ( "floor" ) |-> 13 @ static ( "builtin" )
                Identifier ( "fmod" ) |-> 14 @ static ( "builtin" )
                Identifier ( "free" ) |-> 15 @ static ( "builtin" )
                Identifier ( "getchar" ) |-> 16 @ static ( "builtin" )
                Identifier ( "log" ) |-> 17 @ static ( "builtin" )
                Identifier ( "malloc" ) |-> 18 @ static ( "builtin" )
                Identifier ( "printf" ) |-> 19 @ static ( "builtin" )
                Identifier ( "putchar" ) |-> 20 @ static ( "builtin" )
                Identifier ( "rand" ) |-> 21 @ static ( "builtin" )
                Identifier ( "realloc" ) |-> 22 @ static ( "builtin" )
                Identifier ( "sin" ) |-> 23 @ static ( "builtin" )
                Identifier ( "snprintf" ) |-> 24 @ static ( "builtin" )
                Identifier ( "sprintf" ) |-> 25 @ static ( "builtin" )
                Identifier ( "sqrt" ) |-> 26 @ static ( "builtin" )
                Identifier ( "srand" ) |-> 27 @ static ( "builtin" )
                Identifier ( "strcpy" ) |-> 28 @ static ( "builtin" )
                Identifier ( "tan" ) |-> 29 @ static ( "builtin" )
            </genv>
            <gtypes>
                Identifier ( "__debug" ) |-> t ( .Set , functionType ( t ( 
                  .Set , void ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "__fslCloseFile" ) |-> t ( .Set , functionType ( 
                  t ( .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "__fslFGetC" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ListItem(t ( .Set 
                  , unsigned-long-long-int )) ) )
                Identifier ( "__fslOpenFile" ) |-> t ( .Set , functionType ( t
                   ( .Set , int ) , ListItem(t ( .Set , pointerType ( t ( 
                  SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , 
                  pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) )
                Identifier ( "__fslPutc" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , signed-char )) ListItem(t
                   ( .Set , int )) ) )
                Identifier ( "abort" ) |-> t ( .Set , functionType ( t ( .Set 
                  , void ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "asin" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "atan" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "atan2" ) |-> t ( .Set , functionType ( t ( .Set 
                  , double ) , ListItem(t ( .Set , double )) ListItem(t ( .Set
                   , double )) ) )
                Identifier ( "calloc" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   unsigned-int )) ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "cos" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "exit" ) |-> t ( .Set , functionType ( t ( .Set ,
                   void ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "exp" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "floor" ) |-> t ( .Set , functionType ( t ( .Set 
                  , double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "fmod" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ListItem(t ( .Set 
                  , double )) ) )
                Identifier ( "free" ) |-> t ( .Set , functionType ( t ( .Set ,
                   void ) , ListItem(t ( .Set , pointerType ( t ( .Set , void 
                  ) ) )) ) )
                Identifier ( "getchar" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "log" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "malloc" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set ,
                   unsigned-int )) ) )
                Identifier ( "printf" ) |-> t ( .Set , functionType ( t ( .Set
                   , int ) , ListItem(t ( SetItem(Restrict) , pointerType ( t 
                  ( SetItem(Const) , signed-char ) ) )) ListItem(variadic) ) )
                Identifier ( "putchar" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( .Set , int )) ) )
                Identifier ( "rand" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , void )) ) )
                Identifier ( "realloc" ) |-> t ( .Set , functionType ( t ( 
                  .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( 
                  .Set , pointerType ( t ( .Set , void ) ) )) ListItem(t ( 
                  .Set , unsigned-int )) ) )
                Identifier ( "sin" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "snprintf" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( SetItem(Restrict) , pointerType 
                  ( t ( .Set , signed-char ) ) )) ListItem(t ( .Set , 
                  unsigned-int )) ListItem(t ( SetItem(Restrict) , pointerType
                   ( t ( SetItem(Const) , signed-char ) ) )) ListItem(variadic
                  ) ) )
                Identifier ( "sprintf" ) |-> t ( .Set , functionType ( t ( 
                  .Set , int ) , ListItem(t ( SetItem(Restrict) , pointerType 
                  ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(
                  Restrict) , pointerType ( t ( SetItem(Const) , signed-char )
                   ) )) ListItem(variadic) ) )
                Identifier ( "sqrt" ) |-> t ( .Set , functionType ( t ( .Set ,
                   double ) , ListItem(t ( .Set , double )) ) )
                Identifier ( "srand" ) |-> t ( .Set , functionType ( t ( .Set 
                  , void ) , ListItem(t ( .Set , unsigned-int )) ) )
                Identifier ( "strcpy" ) |-> t ( .Set , functionType ( t ( .Set
                   , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t (
                   .Set , pointerType ( t ( .Set , signed-char ) ) )) 
                  ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
                  signed-char ) ) )) ) )
                Identifier ( "tan" ) |-> t ( .Set , functionType ( t ( .Set , 
                  double ) , ListItem(t ( .Set , double )) ) )
            </gtypes>
            <local-types>
                .Map
            </local-types>
            <local-structs>
                .Map
            </local-structs>
            <goto-map>
                .Map
            </goto-map>
            <gstructs>
                .Map
            </gstructs>
            <local-statics>
                .Map
            </local-statics>
        </tu>
        <tu>
            <tu-id>
                "undefAdd.c"
            </tu-id>
            <next-unnamed>
                0
            </next-unnamed>
            <update>
                <version>
                    0
                </version>
                <original-func>
                    SetItem(Identifier ( "main" ))
                </original-func>
                <wanted>
                    .Set
                </wanted>
                <patch-tu>
                    .Set
                </patch-tu>
                <cap-point>
                    SetItem(Identifier ( "main" ))
                </cap-point>
                <wanted-struct>
                    .Set
                </wanted-struct>
                <original-struct>
                    .Set
                </original-struct>
                <update-point-pair>
                    .Set
                </update-point-pair>
                <semantic-points>
                    .Map
                </semantic-points>
                <capability>
                    Identifier ( "main_D" ) |-> set ( .Set )
                    Identifier ( "main_D'" ) |-> set ( .Set )
                    Identifier ( "main_L" ) |-> set ( .Set )
                </capability>
                <induced-points>
                    .Map
                </induced-points>
                <struct-restriction>
                    .Map
                </struct-restriction>
            </update>
            <incomplete-tags>
                .Set
            </incomplete-tags>
            <genv>
                Identifier ( "main" ) |-> 0 @ static ( "undefAdd.c" )
            </genv>
            <gtypes>
                Identifier ( "main" ) |-> t ( .Set , functionType ( t ( .Set ,
                   int ) , ListItem(t ( .Set , void )) ) )
            </gtypes>
            <local-types>
                kpair ( Identifier ( "x" ) , 1 ) |-> .K
            </local-types>
            <local-structs>
                .Map
            </local-structs>
            <goto-map>
                Identifier ( "main" ) |-> map ( funLabel ( Identifier ( "main"
                   ) ) |-> gotoObject ( 0 , .List , Block ( 1 , list ( .List )
                   , list ( ListItem(CodeLoc ( DeclarationDefinition ( 
                  InitNameGroup ( Specifier ( list ( ListItem(Int) ) ) , list 
                  ( ListItem(InitName ( Name ( Identifier ( "x" ) , JustBase )
                   , SingleInit ( tv ( 0 , t ( .Set , int ) ) ) )) ) ) ) , 
                  CabsLoc ( "undefAdd.c" , 2 , 2 , 0 ) )) ListItem(CodeLoc ( 
                  Return ( Identifier ( "x" ) := tv ( 1 , t ( .Set , int ) ) +
                   Identifier ( "x" ) ) , CabsLoc ( "undefAdd.c" , 3 , 2 , 0 )
                   )) ) ) ~> Return ( tv ( 0 , t ( .Set , int ) ) ) ~> Return 
                  ( emptyValue ) , .List , .List ) )
            </goto-map>
            <gstructs>
                .Map
            </gstructs>
            <local-statics>
                .Map
            </local-statics>
        </tu>
    </translation-units>
    <main-tu>
        SetItem("undefAdd.c")
    </main-tu>
    <patch-unit>
        .Set
    </patch-unit>
    <functions>
        0 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c"
           ) |-> functionObject ( Identifier ( "isprint" ) , ListItem(
          typedDeclaration ( t ( .Set , int ) , Identifier ( "c" ) )) , t ( 
          .Set , functionType ( t ( .Set , int ) , ListItem(t ( .Set , int )) 
          ) ) , Goto ( funLabel ( Identifier ( "isprint" ) ) ) )
        0 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" 
          ) |-> functionObject ( Identifier ( "abs" ) , ListItem(
          typedDeclaration ( t ( .Set , int ) , Identifier ( "num" ) )) , t ( 
          .Set , functionType ( t ( .Set , int ) , ListItem(t ( .Set , int )) 
          ) ) , Goto ( funLabel ( Identifier ( "abs" ) ) ) )
        0 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> functionObject ( Identifier ( "fprintf" ) , ListItem(
          typedDeclaration ( t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 
          Identifier ( "stream" ) )) ListItem(typedDeclaration ( t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) ) , Identifier ( 
          "format" ) )) ListItem(variadic) , t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( .Set , pointerType ( t ( .Set , 
          structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
          typedDeclaration ( t ( .Set , unsigned-long-long-int ) , Identifier 
          ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ListItem(variadic) ) ) , Goto ( funLabel
           ( Identifier ( "fprintf" ) ) ) )
        0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" ) |-> 
          functionObject ( Identifier ( "atoi" ) , ListItem(typedDeclaration (
           t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) , 
          Identifier ( "c" ) )) , t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) ) , Goto ( funLabel ( Identifier ( "atoi" ) ) ) )
        0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strncpy" ) , ListItem(
          typedDeclaration ( t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          signed-char ) ) ) , Identifier ( "dest" ) )) ListItem(
          typedDeclaration ( t ( SetItem(Restrict) , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) ) , Identifier ( "src" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-int ) , Identifier (
           "n" ) )) , t ( .Set , functionType ( t ( .Set , pointerType ( t ( 
          .Set , signed-char ) ) ) , ListItem(t ( SetItem(Restrict) , 
          pointerType ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(t ( .Set , unsigned-int )) ) ) , Goto ( funLabel ( 
          Identifier ( "strncpy" ) ) ) )
        0 @ static ( "builtin" ) |-> functionObject ( Identifier ( "__debug" )
           , .List , t ( .Set , functionType ( t ( .Set , void ) , ListItem(t 
          ( .Set , int )) ) ) , handleBuiltin )
        0 @ static ( "undefAdd.c" ) |-> functionObject ( Identifier ( "main" )
           , ListItem(typedDeclaration ( t ( .Set , void ) , #NoName ( 0 ) )) 
          , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( .Set , 
          void )) ) ) , Goto ( funLabel ( Identifier ( "main" ) ) ) )
        1 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" 
          ) |-> functionObject ( Identifier ( "fabs" ) , ListItem(
          typedDeclaration ( t ( .Set , double ) , Identifier ( "num" ) )) , t
           ( .Set , functionType ( t ( .Set , double ) , ListItem(t ( .Set , 
          double )) ) ) , Goto ( funLabel ( Identifier ( "fabs" ) ) ) )
        1 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> functionObject ( Identifier ( "getc" ) , ListItem(
          typedDeclaration ( t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 
          Identifier ( "stream" ) )) , t ( .Set , functionType ( t ( .Set , 
          int ) , ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , Goto
           ( funLabel ( Identifier ( "getc" ) ) ) )
        1 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strlen" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) ,
           Identifier ( "str" ) )) , t ( .Set , functionType ( t ( .Set , 
          unsigned-int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
          ) , signed-char ) ) )) ) ) , Goto ( funLabel ( Identifier ( "strlen"
           ) ) ) )
        1 @ static ( "builtin" ) |-> functionObject ( Identifier ( 
          "__fslCloseFile" ) , .List , t ( .Set , functionType ( t ( .Set , 
          int ) , ListItem(t ( .Set , int )) ) ) , handleBuiltin )
        2 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" 
          ) |-> functionObject ( Identifier ( "pow" ) , ListItem(
          typedDeclaration ( t ( .Set , double ) , Identifier ( "x" ) )) 
          ListItem(typedDeclaration ( t ( .Set , double ) , Identifier ( "y" )
           )) , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t ( 
          .Set , double )) ListItem(t ( .Set , double )) ) ) , Goto ( funLabel
           ( Identifier ( "pow" ) ) ) )
        2 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> functionObject ( Identifier ( "puts" ) , ListItem(
          typedDeclaration ( t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) ) , Identifier ( "str" ) )) , t ( .Set , 
          functionType ( t ( .Set , int ) , ListItem(t ( .Set , pointerType ( 
          t ( SetItem(Const) , signed-char ) ) )) ) ) , Goto ( funLabel ( 
          Identifier ( "puts" ) ) ) )
        2 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "memset" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( .Set , void ) ) ) , Identifier ( 
          "dest" ) )) ListItem(typedDeclaration ( t ( .Set , int ) , 
          Identifier ( "value" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-int ) , Identifier ( "len" ) )) , t ( .Set , functionType (
           t ( .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set 
          , pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , int )) 
          ListItem(t ( .Set , unsigned-int )) ) ) , Goto ( funLabel ( 
          Identifier ( "memset" ) ) ) )
        2 @ static ( "builtin" ) |-> functionObject ( Identifier ( 
          "__fslFGetC" ) , .List , t ( .Set , functionType ( t ( .Set , int ) 
          , ListItem(t ( .Set , int )) ListItem(t ( .Set , 
          unsigned-long-long-int )) ) ) , handleBuiltin )
        3 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "memchr" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , void ) ) ) , 
          Identifier ( "s" ) )) ListItem(typedDeclaration ( t ( .Set , int ) ,
           Identifier ( "c" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-int ) , Identifier ( "n" ) )) , t ( .Set , functionType ( t
           ( .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , void ) ) )) ListItem(t ( .Set , 
          int )) ListItem(t ( .Set , unsigned-int )) ) ) , Goto ( funLabel ( 
          Identifier ( "memchr" ) ) ) )
        3 @ static ( "builtin" ) |-> functionObject ( Identifier ( 
          "__fslOpenFile" ) , .List , t ( .Set , functionType ( t ( .Set , int
           ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ) ) , handleBuiltin )
        4 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> functionObject ( Identifier ( "putc" ) , ListItem(
          typedDeclaration ( t ( .Set , signed-char ) , Identifier ( "c" ) )) 
          ListItem(typedDeclaration ( t ( .Set , pointerType ( t ( .Set , 
          structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
          typedDeclaration ( t ( .Set , unsigned-long-long-int ) , Identifier 
          ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) ) , Identifier ( "stream" ) )) , t ( .Set , 
          functionType ( t ( .Set , int ) , ListItem(t ( .Set , signed-char ))
           ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , Goto
           ( funLabel ( Identifier ( "putc" ) ) ) )
        4 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strcspn" ) , ListItem(
          typedDeclaration ( t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) ) , Identifier ( "s1" ) )) ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) ,
           Identifier ( "s2" ) )) , t ( .Set , functionType ( t ( .Set , 
          unsigned-int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
          ) , signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ) ) , Goto ( funLabel ( 
          Identifier ( "strcspn" ) ) ) )
        4 @ static ( "builtin" ) |-> functionObject ( Identifier ( "__fslPutc"
           ) , .List , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t
           ( .Set , signed-char )) ListItem(t ( .Set , int )) ) ) , 
          handleBuiltin )
        5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strpbrk" ) , ListItem(
          typedDeclaration ( t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) ) , Identifier ( "s1" ) )) ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) ,
           Identifier ( "s2" ) )) , t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) ) , 
          Goto ( funLabel ( Identifier ( "strpbrk" ) ) ) )
        5 @ static ( "builtin" ) |-> functionObject ( Identifier ( "abort" ) ,
           .List , t ( .Set , functionType ( t ( .Set , void ) , ListItem(t ( 
          .Set , void )) ) ) , handleBuiltin )
        6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strspn" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) ,
           Identifier ( "s1" ) )) ListItem(typedDeclaration ( t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) ) , Identifier ( 
          "s2" ) )) , t ( .Set , functionType ( t ( .Set , unsigned-int ) , 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ) ) , Goto ( funLabel ( Identifier ( "strspn" ) )
           ) )
        6 @ static ( "builtin" ) |-> functionObject ( Identifier ( "asin" ) , 
          .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t (
           .Set , double )) ) ) , handleBuiltin )
        7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strstr" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) ,
           Identifier ( "haystack" ) )) ListItem(typedDeclaration ( t ( .Set ,
           pointerType ( t ( SetItem(Const) , signed-char ) ) ) , Identifier (
           "needle" ) )) , t ( .Set , functionType ( t ( .Set , pointerType ( 
          t ( .Set , signed-char ) ) ) , ListItem(t ( .Set , pointerType ( t (
           SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , pointerType
           ( t ( SetItem(Const) , signed-char ) ) )) ) ) , Goto ( funLabel ( 
          Identifier ( "strstr" ) ) ) )
        7 @ static ( "builtin" ) |-> functionObject ( Identifier ( "atan" ) , 
          .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t (
           .Set , double )) ) ) , handleBuiltin )
        8 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strtok_r" ) , ListItem(
          typedDeclaration ( t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          signed-char ) ) ) , Identifier ( "s" ) )) ListItem(typedDeclaration 
          ( t ( SetItem(Restrict) , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) ) , Identifier ( "delimiters" ) )) ListItem(
          typedDeclaration ( t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) ) ) , Identifier ( 
          "lasts" ) )) , t ( .Set , functionType ( t ( .Set , pointerType ( t 
          ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(Restrict) , 
          pointerType ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) ) )) ) ) , Goto ( 
          funLabel ( Identifier ( "strtok_r" ) ) ) )
        8 @ static ( "builtin" ) |-> functionObject ( Identifier ( "atan2" ) ,
           .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t 
          ( .Set , double )) ListItem(t ( .Set , double )) ) ) , handleBuiltin
           )
        9 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strtok" ) , ListItem(typedDeclaration
           ( t ( SetItem(Restrict) , pointerType ( t ( .Set , signed-char ) ) 
          ) , Identifier ( "s1" ) )) ListItem(typedDeclaration ( t ( SetItem(
          Restrict) , pointerType ( t ( SetItem(Const) , signed-char ) ) ) , 
          Identifier ( "delimiters" ) )) , t ( .Set , functionType ( t ( .Set 
          , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) ) , Goto ( funLabel ( Identifier ( "strtok" ) ) ) )
        9 @ static ( "builtin" ) |-> functionObject ( Identifier ( "calloc" ) 
          , .List , t ( .Set , functionType ( t ( .Set , pointerType ( t ( 
          .Set , void ) ) ) , ListItem(t ( .Set , unsigned-int )) ListItem(t (
           .Set , unsigned-int )) ) ) , handleBuiltin )
        10 @ static ( "builtin" ) |-> functionObject ( Identifier ( "cos" ) , 
          .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t (
           .Set , double )) ) ) , handleBuiltin )
        11 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          functionObject ( Identifier ( "fopen" ) , ListItem(typedDeclaration 
          ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) , 
          Identifier ( "filename" ) )) ListItem(typedDeclaration ( t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) ) , Identifier ( 
          "mode" ) )) , t ( .Set , functionType ( t ( .Set , pointerType ( t (
           .Set , structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
          ListItem(typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
          Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) ) , ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ) ) , Goto ( funLabel ( 
          Identifier ( "fopen" ) ) ) )
        11 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strcmp" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) ,
           Identifier ( "s1" ) )) ListItem(typedDeclaration ( t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) ) , Identifier ( 
          "s2" ) )) , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t 
          ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ) ) , Goto ( funLabel ( Identifier ( "strcmp" ) ) ) )
        11 @ static ( "builtin" ) |-> functionObject ( Identifier ( "exit" ) ,
           .List , t ( .Set , functionType ( t ( .Set , void ) , ListItem(t ( 
          .Set , int )) ) ) , handleBuiltin )
        12 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          functionObject ( Identifier ( "fclose" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( .Set , structType ( Identifier ( 
          "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 
          Identifier ( "stream" ) )) , t ( .Set , functionType ( t ( .Set , 
          int ) , ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , Goto
           ( funLabel ( Identifier ( "fclose" ) ) ) )
        12 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "memmove" ) , ListItem(
          typedDeclaration ( t ( .Set , pointerType ( t ( .Set , void ) ) ) , 
          Identifier ( "s1" ) )) ListItem(typedDeclaration ( t ( .Set , 
          pointerType ( t ( SetItem(Const) , void ) ) ) , Identifier ( "s2" ) 
          )) ListItem(typedDeclaration ( t ( .Set , unsigned-int ) , 
          Identifier ( "n" ) )) , t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , pointerType
           ( t ( SetItem(Const) , void ) ) )) ListItem(t ( .Set , unsigned-int
           )) ) ) , Goto ( funLabel ( Identifier ( "memmove" ) ) ) )
        12 @ static ( "builtin" ) |-> functionObject ( Identifier ( "exp" ) , 
          .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t (
           .Set , double )) ) ) , handleBuiltin )
        13 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          functionObject ( Identifier ( "feof" ) , ListItem(typedDeclaration (
           t ( .Set , pointerType ( t ( .Set , structType ( Identifier ( 
          "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 
          Identifier ( "stream" ) )) , t ( .Set , functionType ( t ( .Set , 
          int ) , ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , Goto
           ( funLabel ( Identifier ( "feof" ) ) ) )
        13 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strchr" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) ,
           Identifier ( "s" ) )) ListItem(typedDeclaration ( t ( .Set , int ) 
          , Identifier ( "c" ) )) , t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          .Set , int )) ) ) , Goto ( funLabel ( Identifier ( "strchr" ) ) ) )
        13 @ static ( "builtin" ) |-> functionObject ( Identifier ( "floor" ) 
          , .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t
           ( .Set , double )) ) ) , handleBuiltin )
        14 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          functionObject ( Identifier ( "fgetc" ) , ListItem(typedDeclaration 
          ( t ( .Set , pointerType ( t ( .Set , structType ( Identifier ( 
          "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 
          Identifier ( "stream" ) )) , t ( .Set , functionType ( t ( .Set , 
          int ) , ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , Goto
           ( funLabel ( Identifier ( "fgetc" ) ) ) )
        14 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strncmp" ) , ListItem(
          typedDeclaration ( t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) ) , Identifier ( "s1" ) )) ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) ) ,
           Identifier ( "s2" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-int ) , Identifier ( "n" ) )) , t ( .Set , functionType ( t
           ( .Set , int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , unsigned-int
           )) ) ) , Goto ( funLabel ( Identifier ( "strncmp" ) ) ) )
        14 @ static ( "builtin" ) |-> functionObject ( Identifier ( "fmod" ) ,
           .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t 
          ( .Set , double )) ListItem(t ( .Set , double )) ) ) , handleBuiltin
           )
        15 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          functionObject ( Identifier ( "fgets" ) , ListItem(typedDeclaration 
          ( t ( SetItem(Restrict) , pointerType ( t ( .Set , signed-char ) ) )
           , Identifier ( "str" ) )) ListItem(typedDeclaration ( t ( .Set , 
          int ) , Identifier ( "size" ) )) ListItem(typedDeclaration ( t ( 
          SetItem(Restrict) , pointerType ( t ( .Set , structType ( Identifier
           ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set
           , unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 
          Identifier ( "stream" ) )) , t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           .Set , int )) ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
          .Set , structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
          ListItem(typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
          Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) )) ) ) , Goto ( funLabel ( Identifier ( "fgets" ) ) )
           )
        15 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strrchr" ) , ListItem(
          typedDeclaration ( t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) ) , Identifier ( "s" ) )) ListItem(typedDeclaration 
          ( t ( .Set , int ) , Identifier ( "c" ) )) , t ( .Set , functionType
           ( t ( .Set , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(
          t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(t ( .Set , int )) ) ) , Goto ( funLabel ( Identifier ( 
          "strrchr" ) ) ) )
        15 @ static ( "builtin" ) |-> functionObject ( Identifier ( "free" ) ,
           .List , t ( .Set , functionType ( t ( .Set , void ) , ListItem(t ( 
          .Set , pointerType ( t ( .Set , void ) ) )) ) ) , handleBuiltin )
        16 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "memcpy" ) , ListItem(typedDeclaration
           ( t ( SetItem(Restrict) , pointerType ( t ( .Set , void ) ) ) , 
          Identifier ( "dest" ) )) ListItem(typedDeclaration ( t ( SetItem(
          Restrict) , pointerType ( t ( SetItem(Const) , void ) ) ) , 
          Identifier ( "src" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-int ) , Identifier ( "count" ) )) , t ( .Set , functionType
           ( t ( .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( 
          SetItem(Restrict) , pointerType ( t ( .Set , void ) ) )) ListItem(t 
          ( SetItem(Restrict) , pointerType ( t ( SetItem(Const) , void ) ) ))
           ListItem(t ( .Set , unsigned-int )) ) ) , Goto ( funLabel ( 
          Identifier ( "memcpy" ) ) ) )
        16 @ static ( "builtin" ) |-> functionObject ( Identifier ( "getchar" 
          ) , .List , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t 
          ( .Set , void )) ) ) , handleBuiltin )
        17 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "memcmp" ) , ListItem(typedDeclaration
           ( t ( .Set , pointerType ( t ( SetItem(Const) , void ) ) ) , 
          Identifier ( "s1" ) )) ListItem(typedDeclaration ( t ( .Set , 
          pointerType ( t ( SetItem(Const) , void ) ) ) , Identifier ( "s2" ) 
          )) ListItem(typedDeclaration ( t ( .Set , unsigned-int ) , 
          Identifier ( "n" ) )) , t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , void ) ) )) 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , void ) ) )) 
          ListItem(t ( .Set , unsigned-int )) ) ) , Goto ( funLabel ( 
          Identifier ( "memcmp" ) ) ) )
        17 @ static ( "builtin" ) |-> functionObject ( Identifier ( "log" ) , 
          .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t (
           .Set , double )) ) ) , handleBuiltin )
        18 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strcat" ) , ListItem(typedDeclaration
           ( t ( SetItem(Restrict) , pointerType ( t ( .Set , signed-char ) ) 
          ) , Identifier ( "s1" ) )) ListItem(typedDeclaration ( t ( SetItem(
          Restrict) , pointerType ( t ( SetItem(Const) , signed-char ) ) ) , 
          Identifier ( "s2" ) )) , t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) ) , Goto ( funLabel ( Identifier ( "strcat" ) ) ) )
        18 @ static ( "builtin" ) |-> functionObject ( Identifier ( "malloc" )
           , .List , t ( .Set , functionType ( t ( .Set , pointerType ( t ( 
          .Set , void ) ) ) , ListItem(t ( .Set , unsigned-int )) ) ) , 
          handleBuiltin )
        19 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          functionObject ( Identifier ( "strncat" ) , ListItem(
          typedDeclaration ( t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          signed-char ) ) ) , Identifier ( "s1" ) )) ListItem(typedDeclaration
           ( t ( SetItem(Restrict) , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) ) , Identifier ( "s2" ) )) ListItem(typedDeclaration
           ( t ( .Set , unsigned-int ) , Identifier ( "n" ) )) , t ( .Set , 
          functionType ( t ( .Set , pointerType ( t ( .Set , signed-char ) ) )
           , ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          signed-char ) ) )) ListItem(t ( SetItem(Restrict) , pointerType ( t 
          ( SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , 
          unsigned-int )) ) ) , Goto ( funLabel ( Identifier ( "strncat" ) ) )
           )
        19 @ static ( "builtin" ) |-> functionObject ( Identifier ( "printf" )
           , .List , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t (
           SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ListItem(variadic) ) ) , handleBuiltin )
        20 @ static ( "builtin" ) |-> functionObject ( Identifier ( "putchar" 
          ) , .List , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t 
          ( .Set , int )) ) ) , handleBuiltin )
        21 @ static ( "builtin" ) |-> functionObject ( Identifier ( "rand" ) ,
           .List , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( 
          .Set , void )) ) ) , handleBuiltin )
        22 @ static ( "builtin" ) |-> functionObject ( Identifier ( "realloc" 
          ) , .List , t ( .Set , functionType ( t ( .Set , pointerType ( t ( 
          .Set , void ) ) ) , ListItem(t ( .Set , pointerType ( t ( .Set , 
          void ) ) )) ListItem(t ( .Set , unsigned-int )) ) ) , handleBuiltin 
          )
        23 @ static ( "builtin" ) |-> functionObject ( Identifier ( "sin" ) , 
          .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t (
           .Set , double )) ) ) , handleBuiltin )
        24 @ static ( "builtin" ) |-> functionObject ( Identifier ( "snprintf"
           ) , .List , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t
           ( SetItem(Restrict) , pointerType ( t ( .Set , signed-char ) ) )) 
          ListItem(t ( .Set , unsigned-int )) ListItem(t ( SetItem(Restrict) ,
           pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(
          variadic) ) ) , handleBuiltin )
        25 @ static ( "builtin" ) |-> functionObject ( Identifier ( "sprintf" 
          ) , .List , t ( .Set , functionType ( t ( .Set , int ) , ListItem(t 
          ( SetItem(Restrict) , pointerType ( t ( .Set , signed-char ) ) )) 
          ListItem(t ( SetItem(Restrict) , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ListItem(variadic) ) ) , handleBuiltin )
        26 @ static ( "builtin" ) |-> functionObject ( Identifier ( "sqrt" ) ,
           .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t 
          ( .Set , double )) ) ) , handleBuiltin )
        27 @ static ( "builtin" ) |-> functionObject ( Identifier ( "srand" ) 
          , .List , t ( .Set , functionType ( t ( .Set , void ) , ListItem(t (
           .Set , unsigned-int )) ) ) , handleBuiltin )
        28 @ static ( "builtin" ) |-> functionObject ( Identifier ( "strcpy" )
           , .List , t ( .Set , functionType ( t ( .Set , pointerType ( t ( 
          .Set , signed-char ) ) ) , ListItem(t ( .Set , pointerType ( t ( 
          .Set , signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ) ) , handleBuiltin )
        29 @ static ( "builtin" ) |-> functionObject ( Identifier ( "tan" ) , 
          .List , t ( .Set , functionType ( t ( .Set , double ) , ListItem(t (
           .Set , double )) ) ) , handleBuiltin )
    </functions>
    <external-defs>
        Identifier ( "__debug" ) |-> 0 @ static ( "builtin" )
        Identifier ( "__fslCloseFile" ) |-> 1 @ static ( "builtin" )
        Identifier ( "__fslFGetC" ) |-> 2 @ static ( "builtin" )
        Identifier ( "__fslOpenFile" ) |-> 3 @ static ( "builtin" )
        Identifier ( "__fslPutc" ) |-> 4 @ static ( "builtin" )
        Identifier ( "__fsl_next_fd" ) |-> 3 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "abort" ) |-> 5 @ static ( "builtin" )
        Identifier ( "abs" ) |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
        Identifier ( "asin" ) |-> 6 @ static ( "builtin" )
        Identifier ( "atan" ) |-> 7 @ static ( "builtin" )
        Identifier ( "atan2" ) |-> 8 @ static ( "builtin" )
        Identifier ( "atoi" ) |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
        Identifier ( "calloc" ) |-> 9 @ static ( "builtin" )
        Identifier ( "cos" ) |-> 10 @ static ( "builtin" )
        Identifier ( "exit" ) |-> 11 @ static ( "builtin" )
        Identifier ( "exp" ) |-> 12 @ static ( "builtin" )
        Identifier ( "fabs" ) |-> 1 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
        Identifier ( "fclose" ) |-> 12 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "feof" ) |-> 13 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "fgetc" ) |-> 14 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "fgets" ) |-> 15 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "floor" ) |-> 13 @ static ( "builtin" )
        Identifier ( "fmod" ) |-> 14 @ static ( "builtin" )
        Identifier ( "fopen" ) |-> 11 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "fprintf" ) |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "free" ) |-> 15 @ static ( "builtin" )
        Identifier ( "getc" ) |-> 1 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "getchar" ) |-> 16 @ static ( "builtin" )
        Identifier ( "isprint" ) |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
        Identifier ( "log" ) |-> 17 @ static ( "builtin" )
        Identifier ( "main" ) |-> 0 @ static ( "undefAdd.c" )
        Identifier ( "malloc" ) |-> 18 @ static ( "builtin" )
        Identifier ( "memchr" ) |-> 3 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "memcmp" ) |-> 17 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "memcpy" ) |-> 16 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "memmove" ) |-> 12 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "memset" ) |-> 2 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "pow" ) |-> 2 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
        Identifier ( "printf" ) |-> 19 @ static ( "builtin" )
        Identifier ( "putc" ) |-> 4 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "putchar" ) |-> 20 @ static ( "builtin" )
        Identifier ( "puts" ) |-> 2 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "rand" ) |-> 21 @ static ( "builtin" )
        Identifier ( "realloc" ) |-> 22 @ static ( "builtin" )
        Identifier ( "sin" ) |-> 23 @ static ( "builtin" )
        Identifier ( "snprintf" ) |-> 24 @ static ( "builtin" )
        Identifier ( "sprintf" ) |-> 25 @ static ( "builtin" )
        Identifier ( "sqrt" ) |-> 26 @ static ( "builtin" )
        Identifier ( "srand" ) |-> 27 @ static ( "builtin" )
        Identifier ( "stderr" ) |-> 10 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "stderr_file" ) |-> 7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "stdin" ) |-> 8 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "stdin_file" ) |-> 5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "stdout" ) |-> 9 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "stdout_file" ) |-> 6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        Identifier ( "strcat" ) |-> 18 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strchr" ) |-> 13 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strcmp" ) |-> 11 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strcpy" ) |-> 28 @ static ( "builtin" )
        Identifier ( "strcspn" ) |-> 4 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strlen" ) |-> 1 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strncat" ) |-> 19 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strncmp" ) |-> 14 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strncpy" ) |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strpbrk" ) |-> 5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strrchr" ) |-> 15 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strspn" ) |-> 6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strstr" ) |-> 7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strtok" ) |-> 9 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "strtok_r" ) |-> 8 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        Identifier ( "tan" ) |-> 29 @ static ( "builtin" )
    </external-defs>
    <external-types>
        Identifier ( "__debug" ) |-> t ( .Set , functionType ( t ( .Set , void
           ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "__debug" ) |-> t ( .Set , functionType ( t ( .Set , void
           ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "__debug" ) |-> t ( .Set , functionType ( t ( .Set , void
           ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "__fslCloseFile" ) |-> t ( .Set , functionType ( t ( .Set
           , int ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "__fslFGetC" ) |-> t ( .Set , functionType ( t ( .Set , 
          int ) , ListItem(t ( .Set , int )) ListItem(t ( .Set , 
          unsigned-long-long-int )) ) )
        Identifier ( "__fslOpenFile" ) |-> t ( .Set , functionType ( t ( .Set 
          , int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ) )
        Identifier ( "__fslPutc" ) |-> t ( .Set , functionType ( t ( .Set , 
          int ) , ListItem(t ( .Set , signed-char )) ListItem(t ( .Set , int )
          ) ) )
        Identifier ( "__fsl_next_fd" ) |-> t ( .Set , int )
        Identifier ( "abort" ) |-> t ( .Set , functionType ( t ( .Set , void )
           , ListItem(t ( .Set , void )) ) )
        Identifier ( "abort" ) |-> t ( .Set , functionType ( t ( .Set , void )
           , ListItem(t ( .Set , void )) ) )
        Identifier ( "abort" ) |-> t ( .Set , functionType ( t ( .Set , void )
           , ListItem(t ( .Set , void )) ) )
        Identifier ( "abs" ) |-> t ( .Set , functionType ( t ( .Set , int ) , 
          ListItem(t ( .Set , int )) ) )
        Identifier ( "asin" ) |-> t ( .Set , functionType ( t ( .Set , double 
          ) , ListItem(t ( .Set , double )) ) )
        Identifier ( "atan" ) |-> t ( .Set , functionType ( t ( .Set , double 
          ) , ListItem(t ( .Set , double )) ) )
        Identifier ( "atan2" ) |-> t ( .Set , functionType ( t ( .Set , double
           ) , ListItem(t ( .Set , double )) ListItem(t ( .Set , double )) ) )
        Identifier ( "atoi" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) )
        Identifier ( "atoi" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) )
        Identifier ( "atoi" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) )
        Identifier ( "calloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          unsigned-int )) ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "calloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          unsigned-int )) ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "calloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          unsigned-int )) ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "cos" ) |-> t ( .Set , functionType ( t ( .Set , double )
           , ListItem(t ( .Set , double )) ) )
        Identifier ( "exit" ) |-> t ( .Set , functionType ( t ( .Set , void ) 
          , ListItem(t ( .Set , int )) ) )
        Identifier ( "exit" ) |-> t ( .Set , functionType ( t ( .Set , void ) 
          , ListItem(t ( .Set , int )) ) )
        Identifier ( "exit" ) |-> t ( .Set , functionType ( t ( .Set , void ) 
          , ListItem(t ( .Set , int )) ) )
        Identifier ( "exp" ) |-> t ( .Set , functionType ( t ( .Set , double )
           , ListItem(t ( .Set , double )) ) )
        Identifier ( "fabs" ) |-> t ( .Set , functionType ( t ( .Set , double 
          ) , ListItem(t ( .Set , double )) ) )
        Identifier ( "fclose" ) |-> t ( .Set , functionType ( t ( .Set , int )
           , ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) )
        Identifier ( "feof" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) )
        Identifier ( "fgetc" ) |-> t ( .Set , functionType ( t ( .Set , int ) 
          , ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) )
        Identifier ( "fgets" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           .Set , int )) ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
          .Set , structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
          ListItem(typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
          Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) )) ) )
        Identifier ( "floor" ) |-> t ( .Set , functionType ( t ( .Set , double
           ) , ListItem(t ( .Set , double )) ) )
        Identifier ( "fmod" ) |-> t ( .Set , functionType ( t ( .Set , double 
          ) , ListItem(t ( .Set , double )) ListItem(t ( .Set , double )) ) )
        Identifier ( "fopen" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , structType ( Identifier ( "FILE_" ) , 88 , 
          fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , ListItem(
          t ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ) )
        Identifier ( "fprintf" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ListItem(t
           ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(variadic) ) )
        Identifier ( "free" ) |-> t ( .Set , functionType ( t ( .Set , void ) 
          , ListItem(t ( .Set , pointerType ( t ( .Set , void ) ) )) ) )
        Identifier ( "free" ) |-> t ( .Set , functionType ( t ( .Set , void ) 
          , ListItem(t ( .Set , pointerType ( t ( .Set , void ) ) )) ) )
        Identifier ( "free" ) |-> t ( .Set , functionType ( t ( .Set , void ) 
          , ListItem(t ( .Set , pointerType ( t ( .Set , void ) ) )) ) )
        Identifier ( "getc" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) )
        Identifier ( "getchar" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , void )) ) )
        Identifier ( "isalnum" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "isalpha" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "isblank" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "iscntrl" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "isdigit" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "isgraph" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "islower" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "isprint" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "ispunct" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "isspace" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "isupper" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "isxdigit" ) |-> t ( .Set , functionType ( t ( .Set , int
           ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "log" ) |-> t ( .Set , functionType ( t ( .Set , double )
           , ListItem(t ( .Set , double )) ) )
        Identifier ( "main" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , void )) ) )
        Identifier ( "malloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          unsigned-int )) ) )
        Identifier ( "malloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          unsigned-int )) ) )
        Identifier ( "malloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          unsigned-int )) ) )
        Identifier ( "memchr" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , void ) ) )) ListItem(t ( .Set , 
          int )) ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "memcmp" ) |-> t ( .Set , functionType ( t ( .Set , int )
           , ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , void ) ) )
          ) ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , void ) ) ))
           ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "memcpy" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( SetItem(Restrict)
           , pointerType ( t ( .Set , void ) ) )) ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( SetItem(Const) , void ) ) )) ListItem(
          t ( .Set , unsigned-int )) ) )
        Identifier ( "memmove" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , pointerType
           ( t ( SetItem(Const) , void ) ) )) ListItem(t ( .Set , unsigned-int
           )) ) )
        Identifier ( "memset" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , int )) 
          ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "pow" ) |-> t ( .Set , functionType ( t ( .Set , double )
           , ListItem(t ( .Set , double )) ListItem(t ( .Set , double )) ) )
        Identifier ( "printf" ) |-> t ( .Set , functionType ( t ( .Set , int )
           , ListItem(t ( SetItem(Restrict) , pointerType ( t ( SetItem(Const)
           , signed-char ) ) )) ListItem(variadic) ) )
        Identifier ( "putc" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , signed-char )) ListItem(t ( .Set , pointerType 
          ( t ( .Set , structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
          ListItem(typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
          Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) )) ) )
        Identifier ( "putchar" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "puts" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) )
        Identifier ( "rand" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , void )) ) )
        Identifier ( "rand" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , void )) ) )
        Identifier ( "rand" ) |-> t ( .Set , functionType ( t ( .Set , int ) ,
           ListItem(t ( .Set , void )) ) )
        Identifier ( "realloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , 
          unsigned-int )) ) )
        Identifier ( "realloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , 
          unsigned-int )) ) )
        Identifier ( "realloc" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , 
          unsigned-int )) ) )
        Identifier ( "sin" ) |-> t ( .Set , functionType ( t ( .Set , double )
           , ListItem(t ( .Set , double )) ) )
        Identifier ( "snprintf" ) |-> t ( .Set , functionType ( t ( .Set , int
           ) , ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          signed-char ) ) )) ListItem(t ( .Set , unsigned-int )) ListItem(t ( 
          SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ListItem(variadic) ) )
        Identifier ( "sprintf" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          signed-char ) ) )) ListItem(t ( SetItem(Restrict) , pointerType ( t 
          ( SetItem(Const) , signed-char ) ) )) ListItem(variadic) ) )
        Identifier ( "sqrt" ) |-> t ( .Set , functionType ( t ( .Set , double 
          ) , ListItem(t ( .Set , double )) ) )
        Identifier ( "srand" ) |-> t ( .Set , functionType ( t ( .Set , void )
           , ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "srand" ) |-> t ( .Set , functionType ( t ( .Set , void )
           , ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "srand" ) |-> t ( .Set , functionType ( t ( .Set , void )
           , ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "stderr" ) |-> t ( .Set , pointerType ( t ( .Set , 
          structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
          typedDeclaration ( t ( .Set , unsigned-long-long-int ) , Identifier 
          ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) )
        Identifier ( "stderr_file" ) |-> t ( .Set , structType ( Identifier ( 
          "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) )
        Identifier ( "stdin" ) |-> t ( .Set , pointerType ( t ( .Set , 
          structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
          typedDeclaration ( t ( .Set , unsigned-long-long-int ) , Identifier 
          ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) )
        Identifier ( "stdin_file" ) |-> t ( .Set , structType ( Identifier ( 
          "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) )
        Identifier ( "stdout" ) |-> t ( .Set , pointerType ( t ( .Set , 
          structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
          typedDeclaration ( t ( .Set , unsigned-long-long-int ) , Identifier 
          ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) )
        Identifier ( "stdout_file" ) |-> t ( .Set , structType ( Identifier ( 
          "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) )
        Identifier ( "strcat" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) )
        Identifier ( "strchr" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          .Set , int )) ) )
        Identifier ( "strcmp" ) |-> t ( .Set , functionType ( t ( .Set , int )
           , ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ) )
        Identifier ( "strcpy" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) )) ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) )
        Identifier ( "strcspn" ) |-> t ( .Set , functionType ( t ( .Set , 
          unsigned-int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
          ) , signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ) )
        Identifier ( "strlen" ) |-> t ( .Set , functionType ( t ( .Set , 
          unsigned-int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
          ) , signed-char ) ) )) ) )
        Identifier ( "strncat" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "strncmp" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "strncpy" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ListItem(t ( .Set , unsigned-int )) ) )
        Identifier ( "strpbrk" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) )
        Identifier ( "strrchr" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          .Set , int )) ) )
        Identifier ( "strspn" ) |-> t ( .Set , functionType ( t ( .Set , 
          unsigned-int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const
          ) , signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ) )
        Identifier ( "strstr" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) )
        Identifier ( "strtok" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ) )
        Identifier ( "strtok_r" ) |-> t ( .Set , functionType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( SetItem(
          Restrict) , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t (
           SetItem(Restrict) , pointerType ( t ( SetItem(Const) , signed-char 
          ) ) )) ListItem(t ( SetItem(Restrict) , pointerType ( t ( .Set , 
          pointerType ( t ( .Set , signed-char ) ) ) ) )) ) )
        Identifier ( "tan" ) |-> t ( .Set , functionType ( t ( .Set , double )
           , ListItem(t ( .Set , double )) ) )
        Identifier ( "tolower" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
        Identifier ( "toupper" ) |-> t ( .Set , functionType ( t ( .Set , int 
          ) , ListItem(t ( .Set , int )) ) )
    </external-types>
    <mem>
        string ( "" ) |-> object ( t ( .Set , arrayType ( t ( .Set , 
          signed-char ) , 1 ) ) , 1 , 0 |-> piece ( 0 , 8 ) )
        string ( "%s\n" ) |-> object ( t ( .Set , arrayType ( t ( .Set , 
          signed-char ) , 4 ) ) , 4 , 0 |-> piece ( 37 , 8 ) 1 |-> piece ( 115
           , 8 ) 2 |-> piece ( 10 , 8 ) 3 |-> piece ( 0 , 8 ) )
        0 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c"
           ) |-> object ( t ( .Set , functionType ( t ( .Set , int ) , 
          ListItem(t ( .Set , int )) ) ) , 1 , .Map )
        0 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" 
          ) |-> object ( t ( .Set , functionType ( t ( .Set , int ) , 
          ListItem(t ( .Set , int )) ) ) , 1 , .Map )
        0 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , functionType ( t ( .Set , int ) , 
          ListItem(t ( .Set , pointerType ( t ( .Set , structType ( Identifier
           ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set
           , unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ListItem(t
           ( .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(variadic) ) ) , 1 , .Map )
        0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( 
          .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) ) , 1
           , .Map )
        0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( SetItem(Restrict) , pointerType 
          ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          .Set , unsigned-int )) ) ) , 1 , .Map )
        0 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , void ) , ListItem(t ( .Set , int )) ) ) , 1 , .Map )
        0 @ static ( "undefAdd.c" ) |-> object ( t ( .Set , functionType ( t (
           .Set , int ) , ListItem(t ( .Set , void )) ) ) , 1 , .Map )
        1 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" 
          ) |-> object ( t ( .Set , functionType ( t ( .Set , double ) , 
          ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        1 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , functionType ( t ( .Set , int ) , 
          ListItem(t ( .Set , pointerType ( t ( .Set , structType ( Identifier
           ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set
           , unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , 1 , 
          .Map )
        1 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , unsigned-int ) , 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ) ) , 1 , .Map )
        1 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( .Set , int )) ) ) , 1 , .Map )
        2 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" 
          ) |-> object ( t ( .Set , functionType ( t ( .Set , double ) , 
          ListItem(t ( .Set , double )) ListItem(t ( .Set , double )) ) ) , 1 
          , .Map )
        2 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , functionType ( t ( .Set , int ) , 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ) ) , 1 , .Map )
        2 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , void ) ) ) , ListItem(t ( .Set , pointerType ( t ( .Set , void ) 
          ) )) ListItem(t ( .Set , int )) ListItem(t ( .Set , unsigned-int )) 
          ) ) , 1 , .Map )
        2 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( .Set , int )) ListItem(t ( .Set , 
          unsigned-long-long-int )) ) ) , 1 , .Map )
        3 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , int ) , 4 , 0 |-> piece ( 3 , 8 ) 1 |-> 
          piece ( 0 , 8 ) 2 |-> piece ( 0 , 8 ) 3 |-> piece ( 0 , 8 ) )
        3 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , void ) ) ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const)
           , void ) ) )) ListItem(t ( .Set , int )) ListItem(t ( .Set , 
          unsigned-int )) ) ) , 1 , .Map )
        3 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( .Set , pointerType ( t ( SetItem(Const) 
          , signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ) ) , 1 , .Map )
        4 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , functionType ( t ( .Set , int ) , 
          ListItem(t ( .Set , signed-char )) ListItem(t ( .Set , pointerType (
           t ( .Set , structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( 
          ListItem(typedDeclaration ( t ( .Set , unsigned-long-long-int ) , 
          Identifier ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) )) ) ) , 1 , .Map )
        4 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , unsigned-int ) , 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ) ) , 1 , .Map )
        4 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( .Set , signed-char )) ListItem(t ( .Set 
          , int )) ) ) , 1 , .Map )
        5 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , structType ( Identifier ( "FILE_" ) , 88 
          , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) , 11 , 0 |-> 
          piece ( 0 , 8 ) 1 |-> piece ( 0 , 8 ) 2 |-> piece ( 0 , 8 ) 3 |-> 
          piece ( 0 , 8 ) 4 |-> piece ( 0 , 8 ) 5 |-> piece ( 0 , 8 ) 6 |-> 
          piece ( 0 , 8 ) 7 |-> piece ( 0 , 8 ) 8 |-> piece ( 0 , 8 ) 9 |-> 
          piece ( 0 , 8 ) 10 |-> piece ( 0 , 8 ) )
        5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , pointerType 
          ( t ( SetItem(Const) , signed-char ) ) )) ) ) , 1 , .Map )
        5 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , void ) , ListItem(t ( .Set , void )) ) ) , 1 , .Map )
        6 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , structType ( Identifier ( "FILE_" ) , 88 
          , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) , 11 , 0 |-> 
          piece ( 0 , 8 ) 1 |-> piece ( 0 , 8 ) 2 |-> piece ( 0 , 8 ) 3 |-> 
          piece ( 0 , 8 ) 4 |-> piece ( 0 , 8 ) 5 |-> piece ( 0 , 8 ) 6 |-> 
          piece ( 0 , 8 ) 7 |-> piece ( 0 , 8 ) 8 |-> piece ( 1 , 8 ) 9 |-> 
          piece ( 0 , 8 ) 10 |-> piece ( 0 , 8 ) )
        6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , unsigned-int ) , 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ) ) , 1 , .Map )
        6 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        7 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , structType ( Identifier ( "FILE_" ) , 88 
          , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) , 11 , 0 |-> 
          piece ( 0 , 8 ) 1 |-> piece ( 0 , 8 ) 2 |-> piece ( 0 , 8 ) 3 |-> 
          piece ( 0 , 8 ) 4 |-> piece ( 0 , 8 ) 5 |-> piece ( 0 , 8 ) 6 |-> 
          piece ( 0 , 8 ) 7 |-> piece ( 0 , 8 ) 8 |-> piece ( 2 , 8 ) 9 |-> 
          piece ( 0 , 8 ) 10 |-> piece ( 0 , 8 ) )
        7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , pointerType 
          ( t ( SetItem(Const) , signed-char ) ) )) ) ) , 1 , .Map )
        7 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        8 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 4 , 0
           |-> piece ( subObject ( loc ( 5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 0 , 0 ) , 8 )
           1 |-> piece ( subObject ( loc ( 5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 1 , 1 ) , 8 )
           2 |-> piece ( subObject ( loc ( 5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 2 , 2 ) , 8 )
           3 |-> piece ( subObject ( loc ( 5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 3 , 3 ) , 8 )
           )
        8 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( SetItem(Restrict) , pointerType 
          ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          SetItem(Restrict) , pointerType ( t ( .Set , pointerType ( t ( .Set 
          , signed-char ) ) ) ) )) ) ) , 1 , .Map )
        8 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ListItem(t ( .Set , 
          double )) ) ) , 1 , .Map )
        9 @ static ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c"
           ) |-> object ( t ( .Set , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 4 , 0
           |-> piece ( subObject ( loc ( 6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 0 , 0 ) , 8 )
           1 |-> piece ( subObject ( loc ( 6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 1 , 1 ) , 8 )
           2 |-> piece ( subObject ( loc ( 6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 2 , 2 ) , 8 )
           3 |-> piece ( subObject ( loc ( 6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 3 , 3 ) , 8 )
           )
        9 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( SetItem(Restrict) , pointerType 
          ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) ) , 1 , .Map
           )
        9 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          unsigned-int )) ListItem(t ( .Set , unsigned-int )) ) ) , 1 , .Map )
        10 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          object ( t ( .Set , pointerType ( t ( .Set , structType ( Identifier
           ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set
           , unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) ) , 4 , 0
           |-> piece ( subObject ( loc ( 7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 0 , 0 ) , 8 )
           1 |-> piece ( subObject ( loc ( 7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 1 , 1 ) , 8 )
           2 |-> piece ( subObject ( loc ( 7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 2 , 2 ) , 8 )
           3 |-> piece ( subObject ( loc ( 7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) , 0 , 
          SetItem(fromArray ( 0 , 11 )) SetItem(align ( 1 )) ) , 3 , 3 ) , 8 )
           )
        10 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , pointerType ( t ( .Set , signed-char ) ) ) , 4 ,
           0 |-> piece ( subObject ( loc ( string ( "" ) , 0 , SetItem(
          fromArray ( 0 , 1 )) ) , 0 , 0 ) , 8 ) 1 |-> piece ( subObject ( loc
           ( string ( "" ) , 0 , SetItem(fromArray ( 0 , 1 )) ) , 1 , 1 ) , 8 
          ) 2 |-> piece ( subObject ( loc ( string ( "" ) , 0 , SetItem(
          fromArray ( 0 , 1 )) ) , 2 , 2 ) , 8 ) 3 |-> piece ( subObject ( loc
           ( string ( "" ) , 0 , SetItem(fromArray ( 0 , 1 )) ) , 3 , 3 ) , 8 
          ) )
        10 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        11 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , structType ( Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(
          typedDeclaration ( t ( .Set , unsigned-long-long-int ) , Identifier 
          ( "offset" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-short-int ) , Identifier ( "handle" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-char ) , Identifier ( "eof" )
           )) , Identifier ( "eof" ) |-> t ( .Set , unsigned-char ) Identifier
           ( "handle" ) |-> t ( .Set , unsigned-short-int ) Identifier ( 
          "offset" ) |-> t ( .Set , unsigned-long-long-int ) , Identifier ( 
          "eof" ) |-> 10 Identifier ( "handle" ) |-> 8 Identifier ( "offset" )
           |-> 0 ) ) ) ) ) , ListItem(t ( .Set , pointerType ( t ( SetItem(
          Const) , signed-char ) ) )) ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ) ) , 1 , .Map )
        11 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( 
          .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ) ) , 1 , .Map )
        11 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , void ) , ListItem(t ( .Set , int )) ) ) , 1 , .Map )
        12 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( 
          .Set , pointerType ( t ( .Set , structType ( Identifier ( "FILE_" ) 
          , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , 1 , 
          .Map )
        12 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , void ) ) ) , ListItem(t ( .Set , pointerType ( t ( .Set , void ) 
          ) )) ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , void ) )
           )) ListItem(t ( .Set , unsigned-int )) ) ) , 1 , .Map )
        12 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        13 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( 
          .Set , pointerType ( t ( .Set , structType ( Identifier ( "FILE_" ) 
          , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , 1 , 
          .Map )
        13 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , int )) ) ) ,
           1 , .Map )
        13 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        14 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( 
          .Set , pointerType ( t ( .Set , structType ( Identifier ( "FILE_" ) 
          , 88 , fieldInfo ( ListItem(typedDeclaration ( t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "offset" ) )) ListItem(
          typedDeclaration ( t ( .Set , unsigned-short-int ) , Identifier ( 
          "handle" ) )) ListItem(typedDeclaration ( t ( .Set , unsigned-char )
           , Identifier ( "eof" ) )) , Identifier ( "eof" ) |-> t ( .Set , 
          unsigned-char ) Identifier ( "handle" ) |-> t ( .Set , 
          unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , 1 , 
          .Map )
        14 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( 
          .Set , pointerType ( t ( SetItem(Const) , signed-char ) ) )) 
          ListItem(t ( .Set , pointerType ( t ( SetItem(Const) , signed-char )
           ) )) ListItem(t ( .Set , unsigned-int )) ) ) , 1 , .Map )
        14 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ListItem(t ( .Set , 
          double )) ) ) , 1 , .Map )
        15 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( SetItem(Restrict) , pointerType 
          ( t ( .Set , signed-char ) ) )) ListItem(t ( .Set , int )) ListItem(
          t ( SetItem(Restrict) , pointerType ( t ( .Set , structType ( 
          Identifier ( "FILE_" ) , 88 , fieldInfo ( ListItem(typedDeclaration 
          ( t ( .Set , unsigned-long-long-int ) , Identifier ( "offset" ) )) 
          ListItem(typedDeclaration ( t ( .Set , unsigned-short-int ) , 
          Identifier ( "handle" ) )) ListItem(typedDeclaration ( t ( .Set , 
          unsigned-char ) , Identifier ( "eof" ) )) , Identifier ( "eof" )
           |-> t ( .Set , unsigned-char ) Identifier ( "handle" ) |-> t ( .Set
           , unsigned-short-int ) Identifier ( "offset" ) |-> t ( .Set , 
          unsigned-long-long-int ) , Identifier ( "eof" ) |-> 10 Identifier ( 
          "handle" ) |-> 8 Identifier ( "offset" ) |-> 0 ) ) ) ) )) ) ) , 1 , 
          .Map )
        15 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( .Set , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ListItem(t ( .Set , int )) ) ) ,
           1 , .Map )
        15 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , void ) , ListItem(t ( .Set , pointerType ( t ( .Set , void ) 
          ) )) ) ) , 1 , .Map )
        16 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , void ) ) ) , ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
          .Set , void ) ) )) ListItem(t ( SetItem(Restrict) , pointerType ( t 
          ( SetItem(Const) , void ) ) )) ListItem(t ( .Set , unsigned-int )) )
           ) , 1 , .Map )
        16 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( .Set , void )) ) ) , 1 , .Map )
        17 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , int ) , ListItem(t ( 
          .Set , pointerType ( t ( SetItem(Const) , void ) ) )) ListItem(t ( 
          .Set , pointerType ( t ( SetItem(Const) , void ) ) )) ListItem(t ( 
          .Set , unsigned-int )) ) ) , 1 , .Map )
        17 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        18 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( SetItem(Restrict) , pointerType 
          ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) ) , 1 , .Map
           )
        18 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          unsigned-int )) ) ) , 1 , .Map )
        19 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" ) |-> 
          object ( t ( .Set , functionType ( t ( .Set , pointerType ( t ( .Set
           , signed-char ) ) ) , ListItem(t ( SetItem(Restrict) , pointerType 
          ( t ( .Set , signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(t ( 
          .Set , unsigned-int )) ) ) , 1 , .Map )
        19 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
          SetItem(Const) , signed-char ) ) )) ListItem(variadic) ) ) , 1 , 
          .Map )
        20 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( .Set , int )) ) ) , 1 , .Map )
        21 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( .Set , void )) ) ) , 1 , .Map )
        22 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , pointerType ( t ( .Set , void ) ) ) , ListItem(t ( .Set , 
          pointerType ( t ( .Set , void ) ) )) ListItem(t ( .Set , 
          unsigned-int )) ) ) , 1 , .Map )
        23 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        24 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
          .Set , signed-char ) ) )) ListItem(t ( .Set , unsigned-int )) 
          ListItem(t ( SetItem(Restrict) , pointerType ( t ( SetItem(Const) , 
          signed-char ) ) )) ListItem(variadic) ) ) , 1 , .Map )
        25 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , int ) , ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
          .Set , signed-char ) ) )) ListItem(t ( SetItem(Restrict) , 
          pointerType ( t ( SetItem(Const) , signed-char ) ) )) ListItem(
          variadic) ) ) , 1 , .Map )
        26 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
        27 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , void ) , ListItem(t ( .Set , unsigned-int )) ) ) , 1 , .Map )
        28 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , pointerType ( t ( .Set , signed-char ) ) ) , ListItem(t ( 
          .Set , pointerType ( t ( .Set , signed-char ) ) )) ListItem(t ( .Set
           , pointerType ( t ( SetItem(Const) , signed-char ) ) )) ) ) , 1 , 
          .Map )
        29 @ static ( "builtin" ) |-> object ( t ( .Set , functionType ( t ( 
          .Set , double ) , ListItem(t ( .Set , double )) ) ) , 1 , .Map )
    </mem>
    <linkings>
        0 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
           |-> 5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        0 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" 
          ) |-> 18 @ static ( "builtin" )
        0 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 1 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        0 @ link ( "builtin" ) |-> 0 @ static ( "builtin" )
        0 @ link ( "undefAdd.c" ) |-> 0 @ static ( "undefAdd.c" )
        1 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
           |-> 6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        1 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 11 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        1 @ link ( "builtin" ) |-> 1 @ static ( "builtin" )
        2 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
           |-> 7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        2 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" 
          ) |-> 15 @ static ( "builtin" )
        2 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 28 @ static ( "builtin" )
        2 @ link ( "builtin" ) |-> 2 @ static ( "builtin" )
        3 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
           |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
        3 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
           |-> 8 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        3 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        3 @ link ( "builtin" ) |-> 3 @ static ( "builtin" )
        4 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
           |-> 1 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
        4 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
           |-> 9 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        4 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 18 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        4 @ link ( "builtin" ) |-> 4 @ static ( "builtin" )
        5 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
           |-> 2 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
        5 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
           |-> 10 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        5 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 19 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        5 @ link ( "builtin" ) |-> 5 @ static ( "builtin" )
        6 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
           |-> 12 @ static ( "builtin" )
        6 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 13 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        6 @ link ( "builtin" ) |-> 6 @ static ( "builtin" )
        7 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
           |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/ctype.c" )
        7 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/math.c" )
           |-> 17 @ static ( "builtin" )
        7 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 2 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        7 @ link ( "builtin" ) |-> 7 @ static ( "builtin" )
        8 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
           |-> 19 @ static ( "builtin" )
        8 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 16 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        8 @ link ( "builtin" ) |-> 8 @ static ( "builtin" )
        9 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
           |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        9 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" 
          ) |-> 0 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdlib.c" )
        9 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" 
          ) |-> 12 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        9 @ link ( "builtin" ) |-> 9 @ static ( "builtin" )
        10 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 17 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        10 @ link ( "builtin" ) |-> 10 @ static ( "builtin" )
        11 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 3 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        11 @ link ( "builtin" ) |-> 11 @ static ( "builtin" )
        12 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 2 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        12 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 15 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        12 @ link ( "builtin" ) |-> 12 @ static ( "builtin" )
        13 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 1 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        13 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 14 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        13 @ link ( "builtin" ) |-> 13 @ static ( "builtin" )
        14 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 13 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        14 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 4 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        14 @ link ( "builtin" ) |-> 14 @ static ( "builtin" )
        15 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 11 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        15 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 5 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        15 @ link ( "builtin" ) |-> 15 @ static ( "builtin" )
        16 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 12 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        16 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 6 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        16 @ link ( "builtin" ) |-> 16 @ static ( "builtin" )
        17 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 14 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        17 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 7 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        17 @ link ( "builtin" ) |-> 17 @ static ( "builtin" )
        18 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 15 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        18 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 9 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        18 @ link ( "builtin" ) |-> 18 @ static ( "builtin" )
        19 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 18 @ static ( "builtin" )
        19 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 8 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c" )
        19 @ link ( "builtin" ) |-> 19 @ static ( "builtin" )
        20 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 18 @ static ( "builtin" )
        20 @ link ( "builtin" ) |-> 20 @ static ( "builtin" )
        21 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 15 @ static ( "builtin" )
        21 @ link ( "builtin" ) |-> 21 @ static ( "builtin" )
        22 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/string.c"
           ) |-> 15 @ static ( "builtin" )
        22 @ link ( "builtin" ) |-> 22 @ static ( "builtin" )
        23 @ link ( "builtin" ) |-> 23 @ static ( "builtin" )
        24 @ link ( "builtin" ) |-> 24 @ static ( "builtin" )
        25 @ link ( "builtin" ) |-> 25 @ static ( "builtin" )
        26 @ link ( "builtin" ) |-> 26 @ static ( "builtin" )
        27 @ link ( "builtin" ) |-> 27 @ static ( "builtin" )
        28 @ link ( "builtin" ) |-> 28 @ static ( "builtin" )
        29 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 4 @ static ( "builtin" )
        29 @ link ( "builtin" ) |-> 29 @ static ( "builtin" )
        30 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 3 @ static ( "builtin" )
        31 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 1 @ static ( "builtin" )
        32 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 2 @ static ( "builtin" )
        33 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 3 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
        34 @ link ( "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" 
          ) |-> 4 @ static ( 
          "/home/dexter/Desktop/c-semantics-3.4.0/libc/src/stdio.c" )
    </linkings>
</global>
<T>
    <status>
        initializing
    </status>
    <exec>
        <k>
            cleanup
        </k>
        <goto-map-calc>
            .Bag
        </goto-map-calc>
        <updating>
            <do-restriction-check>
                .List
            </do-restriction-check>
            <signal>
                <signal-for-updatepatch>
                    false
                </signal-for-updatepatch>
                <signal-for-struct>
                    false
                </signal-for-struct>
                <signal-for-check-struct-version>
                    false
                </signal-for-check-struct-version>
            </signal>
            <restriction-calc>
                <tmp-program-loc>
                    CabsLoc ( "undefAdd.c" , 3 , 2 , 0 )
                </tmp-program-loc>
                <res-calc>
                    .K
                </res-calc>
                <past-functions>
                    ListItem(1)
                </past-functions>
                <res-block-history>
                    .List
                </res-block-history>
                <curr-functions>
                    .List
                </curr-functions>
                <struct-with-location>
                    .Set
                </struct-with-location>
                <recent-out-block>
                    SetItem(1)
                </recent-out-block>
                <call-with-location>
                    .Set
                </call-with-location>
                <block-pair>
                    .Set
                </block-pair>
                <function-block>
                    Identifier ( "main" ) |-> begin-end ( 2 , 3 )
                </function-block>
                <tmp-struct-restriction>
                    .Map
                </tmp-struct-restriction>
            </restriction-calc>
            <cap-points>
                .Set
            </cap-points>
            <tmp-loc-for-struct-init>
                .Set
            </tmp-loc-for-struct-init>
            <original-function>
                SetItem(Identifier ( "__debug" ))
                SetItem(Identifier ( "__fslCloseFile" ))
                SetItem(Identifier ( "__fslFGetC" ))
                SetItem(Identifier ( "__fslOpenFile" ))
                SetItem(Identifier ( "__fslPutc" ))
                SetItem(Identifier ( "abort" ))
                SetItem(Identifier ( "asin" ))
                SetItem(Identifier ( "atan" ))
                SetItem(Identifier ( "atan2" ))
                SetItem(Identifier ( "calloc" ))
                SetItem(Identifier ( "cos" ))
                SetItem(Identifier ( "exit" ))
                SetItem(Identifier ( "exp" ))
                SetItem(Identifier ( "floor" ))
                SetItem(Identifier ( "fmod" ))
                SetItem(Identifier ( "free" ))
                SetItem(Identifier ( "getchar" ))
                SetItem(Identifier ( "log" ))
                SetItem(Identifier ( "main" ))
                SetItem(Identifier ( "malloc" ))
                SetItem(Identifier ( "printf" ))
                SetItem(Identifier ( "putchar" ))
                SetItem(Identifier ( "rand" ))
                SetItem(Identifier ( "realloc" ))
                SetItem(Identifier ( "sin" ))
                SetItem(Identifier ( "snprintf" ))
                SetItem(Identifier ( "sprintf" ))
                SetItem(Identifier ( "sqrt" ))
                SetItem(Identifier ( "srand" ))
                SetItem(Identifier ( "strcpy" ))
                SetItem(Identifier ( "tan" ))
            </original-function>
            <struct-content>
                .Set
            </struct-content>
            <tmp-update-point>
                .Set
            </tmp-update-point>
        </updating>
        <control>
            <initializing>
                0
            </initializing>
            <curr-program-loc>
                CabsLoc ( "undefAdd.c" , 3 , 2 , 0 )
            </curr-program-loc>
            <curr-function>
                file-scope
            </curr-function>
            <curr-tu>
                "builtin"
            </curr-tu>
            <control-details>
                <saved-init>
                    .K
                </saved-init>
                <incomplete-length>
                    0
                </incomplete-length>
                <decl-type-holder>
                    .K
                </decl-type-holder>
                <curr-object>
                    .List
                </curr-object>
                <block-stack>
                    .List
                </block-stack>
                <curr-subobject>
                    .List
                </curr-subobject>
                <local>
                    <block-history>
                        .List
                    </block-history>
                    <types>
                        Identifier ( "__debug" ) |-> t ( .Set , functionType (
                           t ( .Set , void ) , ListItem(t ( .Set , int )) ) )
                        Identifier ( "__fslCloseFile" ) |-> t ( .Set , 
                          functionType ( t ( .Set , int ) , ListItem(t ( .Set 
                          , int )) ) )
                        Identifier ( "__fslFGetC" ) |-> t ( .Set , 
                          functionType ( t ( .Set , int ) , ListItem(t ( .Set 
                          , int )) ListItem(t ( .Set , unsigned-long-long-int 
                          )) ) )
                        Identifier ( "__fslOpenFile" ) |-> t ( .Set , 
                          functionType ( t ( .Set , int ) , ListItem(t ( .Set 
                          , pointerType ( t ( SetItem(Const) , signed-char ) )
                           )) ListItem(t ( .Set , pointerType ( t ( SetItem(
                          Const) , signed-char ) ) )) ) )
                        Identifier ( "__fslPutc" ) |-> t ( .Set , functionType
                           ( t ( .Set , int ) , ListItem(t ( .Set , 
                          signed-char )) ListItem(t ( .Set , int )) ) )
                        Identifier ( "abort" ) |-> t ( .Set , functionType ( t
                           ( .Set , void ) , ListItem(t ( .Set , void )) ) )
                        Identifier ( "asin" ) |-> t ( .Set , functionType ( t 
                          ( .Set , double ) , ListItem(t ( .Set , double )) ) 
                          )
                        Identifier ( "atan" ) |-> t ( .Set , functionType ( t 
                          ( .Set , double ) , ListItem(t ( .Set , double )) ) 
                          )
                        Identifier ( "atan2" ) |-> t ( .Set , functionType ( t
                           ( .Set , double ) , ListItem(t ( .Set , double )) 
                          ListItem(t ( .Set , double )) ) )
                        Identifier ( "calloc" ) |-> t ( .Set , functionType ( 
                          t ( .Set , pointerType ( t ( .Set , void ) ) ) , 
                          ListItem(t ( .Set , unsigned-int )) ListItem(t ( 
                          .Set , unsigned-int )) ) )
                        Identifier ( "cos" ) |-> t ( .Set , functionType ( t (
                           .Set , double ) , ListItem(t ( .Set , double )) ) )
                        Identifier ( "exit" ) |-> t ( .Set , functionType ( t 
                          ( .Set , void ) , ListItem(t ( .Set , int )) ) )
                        Identifier ( "exp" ) |-> t ( .Set , functionType ( t (
                           .Set , double ) , ListItem(t ( .Set , double )) ) )
                        Identifier ( "floor" ) |-> t ( .Set , functionType ( t
                           ( .Set , double ) , ListItem(t ( .Set , double )) )
                           )
                        Identifier ( "fmod" ) |-> t ( .Set , functionType ( t 
                          ( .Set , double ) , ListItem(t ( .Set , double )) 
                          ListItem(t ( .Set , double )) ) )
                        Identifier ( "free" ) |-> t ( .Set , functionType ( t 
                          ( .Set , void ) , ListItem(t ( .Set , pointerType ( 
                          t ( .Set , void ) ) )) ) )
                        Identifier ( "getchar" ) |-> t ( .Set , functionType (
                           t ( .Set , int ) , ListItem(t ( .Set , void )) ) )
                        Identifier ( "log" ) |-> t ( .Set , functionType ( t (
                           .Set , double ) , ListItem(t ( .Set , double )) ) )
                        Identifier ( "main" ) |-> t ( .Set , functionType ( t 
                          ( .Set , int ) , ListItem(t ( .Set , void )) ) )
                        Identifier ( "malloc" ) |-> t ( .Set , functionType ( 
                          t ( .Set , pointerType ( t ( .Set , void ) ) ) , 
                          ListItem(t ( .Set , unsigned-int )) ) )
                        Identifier ( "printf" ) |-> t ( .Set , functionType ( 
                          t ( .Set , int ) , ListItem(t ( SetItem(Restrict) , 
                          pointerType ( t ( SetItem(Const) , signed-char ) ) )
                          ) ListItem(variadic) ) )
                        Identifier ( "putchar" ) |-> t ( .Set , functionType (
                           t ( .Set , int ) , ListItem(t ( .Set , int )) ) )
                        Identifier ( "rand" ) |-> t ( .Set , functionType ( t 
                          ( .Set , int ) , ListItem(t ( .Set , void )) ) )
                        Identifier ( "realloc" ) |-> t ( .Set , functionType (
                           t ( .Set , pointerType ( t ( .Set , void ) ) ) , 
                          ListItem(t ( .Set , pointerType ( t ( .Set , void ) 
                          ) )) ListItem(t ( .Set , unsigned-int )) ) )
                        Identifier ( "sin" ) |-> t ( .Set , functionType ( t (
                           .Set , double ) , ListItem(t ( .Set , double )) ) )
                        Identifier ( "snprintf" ) |-> t ( .Set , functionType 
                          ( t ( .Set , int ) , ListItem(t ( SetItem(Restrict) 
                          , pointerType ( t ( .Set , signed-char ) ) )) 
                          ListItem(t ( .Set , unsigned-int )) ListItem(t ( 
                          SetItem(Restrict) , pointerType ( t ( SetItem(Const)
                           , signed-char ) ) )) ListItem(variadic) ) )
                        Identifier ( "sprintf" ) |-> t ( .Set , functionType (
                           t ( .Set , int ) , ListItem(t ( SetItem(Restrict) ,
                           pointerType ( t ( .Set , signed-char ) ) )) 
                          ListItem(t ( SetItem(Restrict) , pointerType ( t ( 
                          SetItem(Const) , signed-char ) ) )) ListItem(
                          variadic) ) )
                        Identifier ( "sqrt" ) |-> t ( .Set , functionType ( t 
                          ( .Set , double ) , ListItem(t ( .Set , double )) ) 
                          )
                        Identifier ( "srand" ) |-> t ( .Set , functionType ( t
                           ( .Set , void ) , ListItem(t ( .Set , unsigned-int 
                          )) ) )
                        Identifier ( "strcpy" ) |-> t ( .Set , functionType ( 
                          t ( .Set , pointerType ( t ( .Set , signed-char ) ) 
                          ) , ListItem(t ( .Set , pointerType ( t ( .Set , 
                          signed-char ) ) )) ListItem(t ( .Set , pointerType (
                           t ( SetItem(Const) , signed-char ) ) )) ) )
                        Identifier ( "tan" ) |-> t ( .Set , functionType ( t (
                           .Set , double ) , ListItem(t ( .Set , double )) ) )
                    </types>
                    <structs>
                        .Map
                    </structs>
                    <env>
                        Identifier ( "__debug" ) |-> 0 @ static ( "builtin" )
                        Identifier ( "__fslCloseFile" ) |-> 1 @ static ( 
                          "builtin" )
                        Identifier ( "__fslFGetC" ) |-> 2 @ static ( "builtin"
                           )
                        Identifier ( "__fslOpenFile" ) |-> 3 @ static ( 
                          "builtin" )
                        Identifier ( "__fslPutc" ) |-> 4 @ static ( "builtin" 
                          )
                        Identifier ( "abort" ) |-> 5 @ static ( "builtin" )
                        Identifier ( "asin" ) |-> 6 @ static ( "builtin" )
                        Identifier ( "atan" ) |-> 7 @ static ( "builtin" )
                        Identifier ( "atan2" ) |-> 8 @ static ( "builtin" )
                        Identifier ( "calloc" ) |-> 9 @ static ( "builtin" )
                        Identifier ( "cos" ) |-> 10 @ static ( "builtin" )
                        Identifier ( "exit" ) |-> 11 @ static ( "builtin" )
                        Identifier ( "exp" ) |-> 12 @ static ( "builtin" )
                        Identifier ( "floor" ) |-> 13 @ static ( "builtin" )
                        Identifier ( "fmod" ) |-> 14 @ static ( "builtin" )
                        Identifier ( "free" ) |-> 15 @ static ( "builtin" )
                        Identifier ( "getchar" ) |-> 16 @ static ( "builtin" )
                        Identifier ( "log" ) |-> 17 @ static ( "builtin" )
                        Identifier ( "main" ) |-> 0 @ static ( "undefAdd.c" )
                        Identifier ( "malloc" ) |-> 18 @ static ( "builtin" )
                        Identifier ( "printf" ) |-> 19 @ static ( "builtin" )
                        Identifier ( "putchar" ) |-> 20 @ static ( "builtin" )
                        Identifier ( "rand" ) |-> 21 @ static ( "builtin" )
                        Identifier ( "realloc" ) |-> 22 @ static ( "builtin" )
                        Identifier ( "sin" ) |-> 23 @ static ( "builtin" )
                        Identifier ( "snprintf" ) |-> 24 @ static ( "builtin" 
                          )
                        Identifier ( "sprintf" ) |-> 25 @ static ( "builtin" )
                        Identifier ( "sqrt" ) |-> 26 @ static ( "builtin" )
                        Identifier ( "srand" ) |-> 27 @ static ( "builtin" )
                        Identifier ( "strcpy" ) |-> 28 @ static ( "builtin" )
                        Identifier ( "tan" ) |-> 29 @ static ( "builtin" )
                    </env>
                </local>
            </control-details>
        </control>
        <effective-types>
            .Map
        </effective-types>
    </exec>
    <options>
        SetItem(DEBUG)
    </options>
</T>